Function GUI(XL_PROCESS=True,XL_MOUSE=True)
	GUI_PRE_RENDER()
	GUI_DRAWALL()
	If XL_PROCESS=True
		GUI_PROCESS_MOUSE()
		GUI_PROCESS_GUI()
	EndIf
	GUI_POST_RENDER()
	If GUI_MOUSE_DRAW=True And XL_MOUSE=True
		If GUI_MOUSE=0
			GUI_MOUSE=GUI_MOUSE_POINTER
		EndIf
		DrawImage GUI_MOUSE,MouseX(),MouseY()
	EndIf
	SetBuffer BackBuffer():Viewport 0,0,GUI_GFXW,GUI_GFXH:Origin 0,0:GUI_OX=0:GUI_OY=0:GUI_VPX=0:GUI_VPY=0:GUI_VPW=GUI_GFXW:GUI_VPH=GUI_GFXH
	If GUI_HELP=True And GUI_GADOVER<>Null
		XL_W=GUI_MESSWIDTH(GUI_ANYGADOVER\HELP$)+8
		XL_H=GUI_MESSHEIGHT(GUI_ANYGADOVER\HELP$)+4
		XL_X=QLIMIT(GUI_HELPX,0,GUI_GFXW-XL_W)
		XL_Y=QLIMIT(GUI_HELPY-XL_H,0,GUI_GFXH-XL_H)
		Color 250,255,240
		Rect XL_X,XL_Y,XL_W,XL_H
		GUI_FONTCOL(0)
		Color 0,0,0
		Rect XL_X,XL_Y,XL_W,XL_H,0
		GUI_TEXT(GUI_ANYGADOVER\HELP$,XL_X+4,XL_Y+3,XL_W-3,XL_H-3,0,True)
	EndIf
	If GUI_DEBUG=True
		GUI_DEBUG()
	EndIf
End Function

Function GUI_FIRSTFPS()
	GUI_FPSCOUNT=0
	GUI_FPSTIMER=MilliSecs()
End Function
	
Function GUI_FPS()
	GUI_FPSOLDTIMER=GUI_FPSTIMER
	GUI_FPSTIMER=MilliSecs()

	GUI_FPSCOUNT=GUI_FPSCOUNT+1
	If GUI_FPSCOUNT>60 Then GUI_FPSCOUNT=60:i.fps=First fps:Delete i

	i.fps=New fps
	i\time=GUI_FPSTIMER-GUI_FPSOLDTIMER

	XL_divide#=0
	XL_totaltime#=0
	For i.fps=Each fps
		XL_divide#=XL_divide#+1.0
		XL_totaltime#=XL_totaltime#+i\time
	Next
	Return (1000.0*XL_divide#)/(XL_totaltime#)
End Function

Function GUI_DEBUG()
	If GUI_GADOVER<>Null
		XL_GOVER=GUI_GADOVER\OBJ
	EndIf
	
	XL_Y=0
	XL_X=GUI_GFXW-200
	Color 120,180,200;200,230,255
	Rect XL_X,XL_Y,200,240
	Color 0,0,0
	Rect XL_X,XL_Y,200,240,0
	XL_X=XL_X+2
	XL_Y=XL_Y+2
	GUI_PRINT XL_X,XL_Y,"FPS:"+GUI_FPS():XL_Y=XL_Y+14
	GUI_PRINT XL_X,XL_Y,"Mem:"+AvailVidMem():XL_Y=XL_Y+14
	GUI_PRINT XL_X,XL_Y,"MX:"+MouseX()+" MY:"+MouseY():XL_Y=XL_Y+14
	XL_Y=XL_Y+14
	WIN.WIN=GUI_ACTIVEWIN;Object.WIN(EVENT\WIN)
	GAD.GAD=Object.GAD(EVENT\GAD)
	If WIN<>Null
		GUI_PRINT XL_X,XL_Y,"Window ID: "+WIN\ID+"  "+WIN\TITLE$:XL_Y=XL_Y+14
	Else
		GUI_PRINT XL_X,XL_Y,"Window ID: NO WIN":XL_Y=XL_Y+14
	EndIf
	If GAD<>Null
		GUI_PRINT XL_X,XL_Y,"Gad:"+GAD\ID:XL_Y=XL_Y+14
		GUI_PRINT XL_X,XL_Y,"Gad Type:"+GAD\TYP+" ":XL_Y=XL_Y+14
		GUI_PRINT XL_X,XL_Y,"Gad Cap$:"+GAD\CAP$+" Gad Val: "+GAD\VAL:XL_Y=XL_Y+14
	Else
		GUI_PRINT XL_X,XL_Y,"Gad: NONE":XL_Y=XL_Y+14
		GUI_PRINT XL_X,XL_Y,"Gad Type:: NA":XL_Y=XL_Y+14
		XL_Y=XL_Y+14
	EndIf
	GUI_PRINT XL_X,XL_Y,"Gad Hit:"+(EVENT\GAD_HIT Or EVENT\GAD_HOLD):XL_Y=XL_Y+14
	GUI_PRINT XL_X,XL_Y,"Gad Rel:"+EVENT\GAD_RELEASE:XL_Y=XL_Y+14
	XL_Y=XL_Y+14
	GUI_PRINT XL_X,XL_Y,"WinMode: "+GUI_WINMODE:XL_Y=XL_Y+14
	GUI_PRINT XL_X,XL_Y,"GadOver "+XL_GOVER:XL_Y=XL_Y+14
	XL_Y=XL_Y+14
	
	GUI_PRINT XL_X,XL_Y,"Gad Toggle: "+EVENT\GAD_NEWSTATE:XL_Y=XL_Y+14
	GUI_PRINT XL_X,XL_Y,"Item DBL Click: "+EVENT\ITM_DBLCLICK:XL_Y=XL_Y+14
	GUI_PRINT XL_X,XL_Y,"Item:"+EVENT\LISTITEM
	
End Function

Function GUI_DRAWALL()
	For WIN.WIN=Each WIN
		If (WIN\STATUS=win_OPEN Or WIN\STATUS=win_MIN) And WIN\IMG>0
			DrawBlock WIN\IMG,WIN\X,WIN\Y
		EndIf
	Next
End Function

Function GUI_REFRESH(XL_WIN)
	WIN.WIN=Object.WIN(XL_WIN)
	If WIN\IMG>0
		FreeImage WIN\IMG
	EndIf
	Delete Each TMP_TABGAD
	WIN\IMG=CreateImage(WIN\W,WIN\H)
	If WIN\gad_MIN<>Null
		If WIN\STATUS=win_MIN
			WIN\gad_MIN\ON=True
		Else
			WIN\gad_MIN\ON=False
		EndIf
	EndIf
	If (GUI_FLAG(WIN\FLAG,flg_QUIT)=False Or WIN\TITLE$="") And WIN\gad_QUIT<>Null
		GUI_FREEGAD(WIN\GAD_QUIT\OBJ)
	EndIf
	If (GUI_FLAG(WIN\FLAG,flg_MIN)=False Or WIN\TITLE$="") And WIN\gad_MIN<>Null
		GUI_FREEGAD(WIN\GAD_MIN\OBJ)
	EndIf
	If (GUI_FLAG(WIN\FLAG,flg_BACK)=False Or WIN\TITLE$="") And WIN\gad_BACK<>Null
		GUI_FREEGAD(WIN\GAD_BACK\OBJ)
	EndIf
	GUI_DRAWWIN(WIN)
	;If WIN\IMG2
	;	FreeImage WIN\IMG2
	;EndIf
	SetBuffer ImageBuffer(WIN\IMG)
	If WIN\PAN_ACT=True
		WIN\TAB_PANEL\X=WIN\TABX:WIN\TAB_PANEL\Y=WIN\TABY
		WIN\TAB_PANEL\W=WIN\TABW:WIN\TAB_PANEL\H=WIN\TABH
	EndIf
	WIN\PAD[4]=WIN\TABX
	For GAD.GAD=Each GAD
		If GAD\WIN=WIN And (GAD\TAB=0 Or GAD\TAB=WIN\TAB) And (GAD\STATUS=gad_SHOW Or GAD\STATUS=gad_LOCK)
			If GAD\TYP=gad_LABEL
				If GAD\IMG
					FreeImage GAD\IMG
					GAD\IMG=0
				EndIf
			EndIf
			GUI_REFRESH_GAD(GAD\OBJ)
			If GAD\TYP=gad_TAB
				XL_TMP.TMP_TABGAD=New TMP_TABGAD
				XL_TMP\GAD=GAD
				GAD\X=WIN\PAD[4]
				WIN\PAD[4]=WIN\PAD[4]+GAD\W-1
				If WIN\PAD[4]>WIN\TABX+WIN\TABW	
					WIN\TABW=WIN\PAD[4]-WIN\TABX
				EndIf
			EndIf
		EndIf
	Next
	If WIN\PAN_ACT=True
		SetBuffer ImageBuffer(WIN\IMG)
		Viewport 1,1,WIN\W-2,WIN\H-2
		GUI_GFXBOX(WIN\TABX,WIN\TABY,WIN\TABW,WIN\TABH,WIN\WCOL[0],WIN\WCOL[1],0,False,True,False,WIN\WCOL[3],False)
		GUI_GFXBOX(WIN\TABX+1,WIN\TABY+1,WIN\TABW-2,WIN\TABH-2,WIN\WCOL[0],WIN\WCOL[1],0,False,False,False,0,False)
		For XL_TMP.TMP_TABGAD=Each TMP_TABGAD
			GUI_REFRESH_GAD(XL_TMP\GAD\OBJ)
		Next
		Delete Each TMP_TABGAD
	EndIf
	If GUI_FLAG(WIN\FLAG,flg_SCALE) And WIN\STATUS=win_OPEN
		SetBuffer ImageBuffer(WIN\IMG)
		If GUI_WINMODE<>Wmode_RESIZE
			DrawImage WIN\IMG_SCALE,WIN\W-16,WIN\H-16
		Else
			DrawImage WIN\IMG_SCALE1,WIN\W-16,WIN\H-16
		EndIf
	EndIf
	SetBuffer BackBuffer():Viewport 0,0,GUI_GFXW,GUI_GFXH:Origin 0,0:GUI_OX=0:GUI_OY=0:GUI_VPX=0:GUI_VPY=0:GUI_VPW=GUI_GFXW:GUI_VPH=GUI_GFXH
End Function

Function GUI_PROCESS_GUI()
	GUI_WINOVER=Null
	GUI_GADOVER=Null
	If GUI_INVSTART=-1 Or GUI_INVEND=-1
		GUI_BLOCK=False
	EndIf			
	XL_MX=EVENT\MOUSE_X
	XL_MY=EVENT\MOUSE_Y
	Delete EVENT
	EVENT=New EVENT
	If MouseX()<>XL_MX Or MouseY()<>XL_MY
		EVENT\MOUSE_MOVE=True
	EndIf
	EVENT\MOUSE_X=MouseX()
	EVENT\MOUSE_Y=MouseY()
	WIN.WIN=Last WIN
	While WIN<>Null
		If WIN\STATUS=win_OPEN Or WIN\STATUS=win_MIN
			If RectsOverlap(WIN\X,WIN\Y,WIN\W,WIN\H,MouseX(),MouseY(),1,1)
				GUI_WINOVER=WIN
				EVENT\WIN_OVER=WIN\OBJ
				Exit
			EndIf
		EndIf
		WIN=Before WIN
	Wend
	
	If GUI_GADHIT<>Null
		EVENT\GAD_ACT=GUI_GADHIT\OBJ
		EVENT\GAD=GUI_GADHIT\OBJ
		If GUI_GADHIT\PARENT<>Null
			EVENT\GAD=GUI_GADHIT\PARENT\OBJ
			If GUI_GADHIT\PARENT\PARENT<>Null
				EVENT\GAD=GUI_GADHIT\PARENT\PARENT\OBJ
			EndIf
		EndIf
	EndIf
	
	Select GUI_WINMODE
		Case Wmode_SLIDER
			If GUI_LMBDWN=True
				If GUI_GADHIT<>Null
					GUI_PROCESS_GADDOWN(GUI_GADHIT)
					EVENT\GAD_NEWVAL=True
				EndIf
			Else
				GUI_WINMODE=Wmode_NONE
			EndIf
		Case Wmode_DRAG
			If GUI_LMBDWN=True
				If GUI_FLAG(GUI_ACTIVEWIN\FLAG,flg_DRAG)=True
					GUI_MOUSE=GUI_MOUSE_WDRAG
					If GUI_ACTIVEWIN\XOFF=-1
						GUI_ACTIVEWIN\XOFF=MouseX()-GUI_ACTIVEWIN\X
						GUI_ACTIVEWIN\YOFF=MouseY()-GUI_ACTIVEWIN\Y
					Else
						GUI_ACTIVEWIN\X=MouseX()-GUI_ACTIVEWIN\XOFF
						GUI_ACTIVEWIN\Y=MouseY()-GUI_ACTIVEWIN\YOFF
					EndIf
				EndIf
				EVENT\WIN_DRAG=True
			Else
				GUI_WINMODE=Wmode_NONE
				GUI_ACTIVEWIN\XOFF=-1
			EndIf
		Case Wmode_CHANGE
			GUI_MOUSE=GUI_MOUSE_POINTER
			If GUI_WINOVER<>Null
				Select GUI_ACTIVEWIN\MODAL
					Case 0,-1,-2
						GUI_WINBACK(GUI_ACTIVEWIN)
						GUI_WINFRONT(GUI_WINOVER)
						GUI_ACTIVEWIN=GUI_WINOVER
					Case 1
						GUI_ACTIVEWIN=GUI_WINOVER
					Case 2
				End Select
				GUI_WINMODE=Wmode_NONE
				EVENT\WIN_CHANGE=True
				EVENT\WIN=GUI_WINOVER\OBJ
			EndIf
			GUI_CLICKEVENT=ms_NONE
		Case Wmode_RESIZE
			If MouseDown(1)
				EVENT\WIN_SCALE=True
				GUI_WINMODE=Wmode_RESIZE
				GUI_MOUSE=GUI_MOUSE_WSCALE
				GUI_ACTIVEWIN\W=QLIMIT(MouseX()-GUI_ACTIVEWIN\X,(17*3)+23,999999)
				GUI_ACTIVEWIN\H=QLIMIT(MouseY()-GUI_ACTIVEWIN\Y,GUI_ACTIVEWIN\MINH,999999)
				GUI_ACTIVEWIN\PANEL\W=GUI_ACTIVEWIN\W
				GUI_ACTIVEWIN\PANEL\H=GUI_ACTIVEWIN\H
				GUI_REFRESH(GUI_ACTIVEWIN\OBJ)
			Else
				GUI_WINMODE=Wmode_NONE
				GUI_REFRESH(GUI_ACTIVEWIN\OBJ)
			EndIf
		Case Wmode_MIN
			GUI_MOUSE=GUI_MOUSE_POINTER
			GUI_WINMIN(GUI_ACTIVEWIN\OBJ)
			EVENT\WIN_MIN=True
		Case Wmode_MAX
			GUI_MOUSE=GUI_MOUSE_POINTER
			GUI_WINMAX(GUI_ACTIVEWIN\OBJ)
			EVENT\WIN_MAX=True
		Case Wmode_BACK
			GUI_MOUSE=GUI_MOUSE_POINTER
			Select GUI_ACTIVEWIN\MODAL
				Case 0,-1,-2
					GUI_WINBACK(GUI_ACTIVEWIN)
					GUI_ACTIVEWIN=Last WIN
			End Select
			GUI_WINMODE=Wmode_NONE
		Case Wmode_MENU
			GUI_POPUP=0
			GUI_MOUSE=GUI_MOUSE_POINTER
			GUI_PROCESS_MENU()
		Case Wmode_POPUP
			GUI_MOUSE=GUI_MOUSE_POINTER
			GUI_WINMODE=Wmode_MENU
		Case Wmode_SELECTOR
			GUI_MOUSE=GUI_MOUSE_POINTER
			If GUI_SELECTOR<>Null
				GUI_PROCESS_SELECTOR()
			EndIf
		Case Wmode_INPUT
			GUI_MOUSE=GUI_MOUSE_POINTER
			If GUI_INPUTGAD\TAB=0 Or GUI_INPUTGAD\TAB=GUI_INPUTGAD\WIN\TAB
				GUI_PROCESS_INPUT()
			Else
				GUI_WINMODE=Wmode_NONE
			EndIf
		Case Wmode_BLOCK
			GUI_PROCESS_GAD()
			GUI_PROCESS_CURSOR()
		Case Wmode_BARCLICK
			GUI_MOUSE=GUI_MOUSE_POINTER
			If GUI_FLAG(GUI_ACTIVEWIN\FLAG,flg_MIN)
				If GUI_ACTIVEWIN\STATUS=win_MIN
					GUI_WINMAX(GUI_ACTIVEWIN\OBJ)
					EVENT\WIN_MAX=True
				Else
					If GUI_ACTIVEWIN\STATUS=win_OPEN
						GUI_WINMIN(GUI_ACTIVEWIN\OBJ)
						EVENT\WIN_MIN=True
					EndIf
				EndIf
			EndIf
			GUI_WINMODE=Wmode_NONE
		Default
			GUI_MOUSE=GUI_MOUSE_POINTER
			If GUI_ACTIVEWIN<>Null
				If RectsOverlap(GUI_ACTIVEWIN\X+GUI_ACTIVEWIN\W-10,GUI_ACTIVEWIN\Y+GUI_ACTIVEWIN\H-10,10,10,MouseX(),MouseY(),1,1)
					If MouseDown(1) And GUI_FLAG(GUI_ACTIVEWIN\FLAG,flg_SCALE) And GUI_ACTIVEGAD=Null And GUI_ACTIVEWIN\STATUS=win_OPEN
						GUI_WINMODE=Wmode_RESIZE
						GUI_MOUSE=GUI_MOUSE_SCALE
					Else
						GUI_PROCESS_GAD()
					EndIf
				Else
					GUI_PROCESS_GAD()
				EndIf
			EndIf

			If GUI_GADHIT<>Null And GUI_CLICKEVENT=ms_NONE
				XL_SCROLL=GUI_PROCESS_SCROLL()
			EndIf
			GUI_HELP=False
			If XL_SCROLL=False And GUI_ANYGADOVER<>Null And GUI_CLICKEVENT=ms_NONE And EVENT\MOUSE_MOVE=False;GUI_HELPX=MouseX()+3 And GUI_HELPY=MouseY()+7
				If MilliSecs()-GUI_HELPTIMER>700
					If GUI_ANYGADOVER\HELP$<>""
						GUI_HELP=True
					EndIf
				EndIf
			Else
				GUI_HELPX=MouseX();+3
				GUI_HELPY=MouseY();+7
				GUI_HELPTIMER=MilliSecs()
			EndIf
			
	End Select
	If GUI_ACTIVEWIN<>Null
		EVENT\WIN=GUI_ACTIVEWIN\OBJ
	EndIf
	
	If EVENT\GAD<>0
		GUI_FOCUS=EVENT\GAD
	EndIf
		
End Function

Function GUI_PROCESS_SCROLL()
	If GUI_SCROLL_LOCK=False
		GAD.GAD=GUI_GADHIT
		If GAD\PARENT<>Null
			Select GAD\PARENT\TYP
				Case gad_PROP
					GAD=GAD\PARENT
				Case gad_INTEGER,gad_FLOAT
					GAD=GAD\PARENT
				Case gad_TOOLBAR
					GAD=GAD\PARENT
			End Select
		EndIf
		XL_MZ=-MouseZSpeed()
		If XL_MZ<>0
			XL_PLUS#=XL_MZ
		Else
			If KeyDown(208)
				XL_PLUS#=1
			Else
				If KeyDown(200)
					XL_PLUS#=-1
				EndIf
			EndIf
			If KeyDown(207)
				XL_PLUS#=-100000000
			EndIf
			If KeyDown(199)
				XL_PLUS#=100000000
			EndIf
		EndIf
		If XL_PLUS<>0
			EVENT\GAD_SCROLL=True
			Select GAD\TYP
				Case gad_SLIDER
					GAD\FVAL=FLIMIT(GAD\FVAL+XL_PLUS*GAD\FPAD[0],GAD\FMIN,GAD\FMAX)
					GAD\VAL=Int(GAD\FVAL)
					GUI_REFRESH_GAD(GAD\OBJ)
				Case gad_PROP
					If GAD\PARENT<>Null
						Select GAD\PARENT\TYP
							Case gad_TREELIST,gad_TXTLIST
								GAD\FVAL=FLIMIT(GAD\FVAL+XL_PLUS*GAD\FPAD[0],GAD\FMIN,GAD\FMAX)
								GAD\VAL=QLIMIT(GAD\VAL+XL_PLUS,GAD\MIN,GAD\MAX)
								GAD\PARENT\PAD[1]=(GAD\PARENT\LINK[0]\VAL)
								GAD\PARENT\LINK[0]\FVAL=GAD\PARENT\PAD[1]
								GUI_REFRESH_GAD(GAD\OBJ)
								GUI_REFRESH_GAD(GAD\PARENT\OBJ)
							Case gad_TEXTAREA
								If GAD=GAD\PARENT\LINK[0]
									GAD\FVAL=FLIMIT(GAD\FVAL+XL_PLUS*GAD\FPAD[0],GAD\FMIN,GAD\FMAX)
									GAD\VAL=QLIMIT(GAD\VAL+XL_PLUS,GAD\MIN,GAD\MAX)
									GAD\PARENT\LINK[0]\FVAL=GAD\PARENT\LINK[0]\VAL
									GUI_REFRESH_GAD(GAD\OBJ)
									GUI_TEXTOUTPUT(GAD\PARENT)
									GUI_REFRESH_GAD(GAD\PARENT\OBJ)
								Else
									XL_PLUS=XL_PLUS*6
									GAD\FVAL=FLIMIT(GAD\FVAL+XL_PLUS*GAD\FPAD[0],GAD\FMIN,GAD\FMAX)
									GAD\VAL=QLIMIT(GAD\VAL+XL_PLUS,GAD\MIN,GAD\MAX)
									GUI_REFRESH_GAD(GAD\OBJ)
									GAD\PARENT\LINK[1]\FVAL=GAD\PARENT\LINK[1]\VAL
									GUI_REFRESH_GAD(GAD\PARENT\OBJ)
								EndIf
							Case gad_IMGAREA
								GAD\VAL=QLIMIT(GAD\VAL+XL_PLUS,GAD\MIN,GAD\MAX)
								GAD\FVAL=GAD\VAL
								GUI_REFRESH_GAD(GAD\OBJ)
								GUI_REFRESH_GAD(GAD\PARENT\OBJ)
						End Select
					EndIf
				Case gad_TOOLBAR
					GUI_TOOLBAR_SCROLL(GAD,XL_PLUS*2)
				Case gad_INTEGER
					GAD\VAL=QLIMIT(GAD\VAL-(GAD\PAD[0]*XL_PLUS),GAD\MIN,GAD\MAX)
					EVENT\GAD_NEWVAL=True
					GUI_REFRESH_GAD(GAD\OBJ)
				Case gad_FLOAT
					GAD\FVAL=FLIMIT(GAD\FVAL-(GAD\FPAD[0]*XL_PLUS),GAD\FMIN,GAD\FMAX)
					EVENT\GAD_NEWVAL=True
					GUI_REFRESH_GAD(GAD\OBJ)
				Case gad_TREELIST,gad_TXTLIST
					GAD\LINK[0]\FVAL=FLIMIT(GAD\LINK[0]\FVAL+XL_PLUS*GAD\LINK[0]\FPAD[0],GAD\LINK[0]\FMIN,GAD\LINK[0]\FMAX)
					GAD\LINK[0]\VAL=Int(GAD\LINK[0]\FVAL)
					GAD\PAD[1]=(GAD\LINK[0]\VAL)
					GAD\LINK[0]\FVAL=GAD\PAD[1]
					GUI_REFRESH_GAD(GAD\LINK[0]\OBJ)
					GUI_REFRESH_GAD(GAD\OBJ)
			End Select
		EndIf
	EndIf
	If XL_PLUS<>0
		Return True
	EndIf
End Function

Function GUI_PROCESS_GAD()
	XL_OLDGAD.GAD=GUI_GADOVER
	GAD.GAD=First GAD
	GUI_GADOVER=Null
	XL_ACTIVEWIN.WIN=GUI_ACTIVEWIN
	
	If GUI_WINOVER<>Null And GUI_WINOVER<>GUI_ACTIVEWIN
		XL_ACTIVEWIN=GUI_WINOVER
	EndIf
	
	If XL_ACTIVEWIN\STATUS=win_OPEN
		While GAD<>Null
			If GAD\WIN=XL_ACTIVEWIN And RectsOverlap(MouseX(),MouseY(),1,1,XL_ACTIVEWIN\X,XL_ACTIVEWIN\Y,XL_ACTIVEWIN\W,XL_ACTIVEWIN\H)
				If (GAD\STATUS=gad_SHOW Or GAD\STATUS=gad_LOCK) And (GAD\TAB=0 Or GAD\TAB=GAD\WIN\TAB) And GAD\TYP<>GAD_LABEL
					If GAD\PANEL\ACT=True
						If RectsOverlap(MouseX(),MouseY(),1,1,GAD\WIN\X+GUI_BUFFERX(GAD),GAD\WIN\Y+GUI_BUFFERY(GAD),GAD\PANEL\W,GAD\PANEL\H)
							If RectsOverlap(MouseX(),MouseY(),1,1,GUI_BUFFERX(GAD)+GAD\X+GAD\WIN\X,GUI_BUFFERY(GAD)+GAD\Y+GAD\WIN\Y,GAD\W,GAD\H)
								GUI_GADOVER=GAD
							EndIf
						EndIf
					EndIf
				EndIf
			EndIf
			GAD=After GAD
		Wend
	Else
		If GUI_ACTIVEWIN\STATUS=win_MIN And RectsOverlap(MouseX(),MouseY(),1,1,GUI_ACTIVEWIN\X,GUI_ACTIVEWIN\Y,GUI_ACTIVEWIN\W,GUI_ACTIVEWIN\H)
			While GAD<>Null
				If GAD\WIN=GUI_ACTIVEWIN
					If GAD=GUI_ACTIVEWIN\GAD_MIN Or GAD=GUI_ACTIVEWIN\GAD_BACK Or GAD=GUI_ACTIVEWIN\GAD_QUIT
						If (GAD\STATUS=gad_SHOW Or GAD\STATUS=gad_LOCK) And (GAD\TAB=0 Or GAD\TAB=GAD\WIN\TAB)
							If RectsOverlap(MouseX(),MouseY(),1,1,GAD\X+GAD\WIN\X,GAD\Y+GAD\WIN\Y,GAD\W,GAD\H)
								GUI_GADOVER=GAD
							EndIf
						EndIf
					EndIf
				EndIf
				GAD=After GAD
			Wend
		EndIf
	EndIf
	
	If GUI_GADOVER<>Null
		GUI_ANYGADOVER=GUI_GADOVER
		If GUI_ACTIVEWIN<>XL_ACTIVEWIN
			GUI_GADOVER=Null
		EndIf
	EndIf
	
	If GUI_ANYGADOVER<>Null
		EVENT\OVER=GUI_ANYGADOVER\OBJ
	EndIf
	
	XL_GADOVER.GAD=GUI_GADOVER
	If XL_GADOVER<>Null
		If XL_GADOVER\TYP=gad_FRAME
			XL_GADOVER=Null
		EndIf
	EndIf
	
	If XL_GADOVER=Null And (GUI_CLICKEVENT=ms_LMBHIT Or GUI_CLICKEVENT=ms_RMBHIT)
		GUI_ACTIVEGAD=Null
		GUI_GADHIT=Null
		If GUI_CLICKEVENT=ms_LMBHIT
			If GUI_WINOVER<>Null
				If GUI_WINOVER<>GUI_ACTIVEWIN
					GUI_WINMODE=Wmode_CHANGE
				Else
					GUI_WINMODE=Wmode_DRAG
					GUI_ACTIVEWIN\XOFF=-1:GUI_ACTIVEWIN\XOFF=-1
					If GUI_ACTIVEWIN\TITLE$<>"" And GUI_DBLCLK=True
						XL_WINICON=0
						If GUI_FLAG(GUI_ACTIVEWIN\FLAG,flg_QUIT)
							XL_WINICON=XL_WINCON+1
						EndIf
						If GUI_FLAG(GUI_ACTIVEWIN\FLAG,flg_BACK)
							XL_WINICON=XL_WINICON+1
						EndIf
						If GUI_FLAG(GUI_ACTIVEWIN\FLAG,flg_MIN)
							XL_WINICON=XL_WINICON+1
						EndIf
						
						If XL_WINICON=0
							XL_TITW=GUI_ACTIVEWIN\W-2
						Else
							XL_TITW=GUI_ACTIVEWIN\W-((XL_WINICON*17)+5)
						EndIf
						
						If RectsOverlap(MouseX(),MouseY(),1,1,GUI_ACTIVEWIN\X,GUI_ACTIVEWIN\Y,XL_TITW,20)
							GUI_WINMODE=Wmode_BARCLICK
						EndIf
					EndIf
				EndIf	
			EndIf
		Else
			If GUI_QMENU_ACTIVE=True And GUI_QMENU<>0
				XL_QMENU.MENU=Object.MENU(GUI_QMENU)
				GUI_WINMODE=Wmode_POPUP
				GUI_MENU_CLEARORDER()
				XL_X=QLIMIT(MouseX(),0,GUI_GFXW-XL_QMENU\W)
				XL_Y=QLIMIT(MouseY(),0,GUI_GFXH-XL_QMENU\H)
				XL_MENU.MENUORDER=GUI_MENU_OPENMENU(XL_QMENU,XL_X,XL_Y,XL_QMENU\W,1,XL_X,XL_Y);+18)
				GUI_QMENU_OPEN=True
			EndIf
		EndIf
	Else
		If GUI_LMBDWN=True Or GUI_RMBDWN=True
			If GUI_GADOVER<>Null
				If GUI_ACTIVEGAD<>Null
					GUI_PROCESS_GADDOWN(GUI_ACTIVEGAD)
				Else
					GUI_ACTIVEGAD=GUI_GADOVER
					GUI_PROCESS_GADDOWN(GUI_ACTIVEGAD)
				EndIf
			Else
				If GUI_ACTIVEGAD<>Null
					GUI_PROCESS_GADDOWN(GUI_ACTIVEGAD)
				EndIf
			EndIf
		Else
			If GUI_ACTIVEGAD<>Null
				If GUI_CLICKEVENT=ms_LMBREL Or GUI_CLICKEVENT=ms_RMBREL
					If GUI_ACTIVEGAD\ACTIVE=True And GUI_ACTIVEGAD\STATUS=gad_SHOW
						GUI_PROCESS_GADRELEASE(GUI_ACTIVEGAD)
						If GUI_CLICKEVENT=ms_LMBREL
							EVENT\GAD_LMBRELEASE=True
						Else
							EVENT\GAD_RMBRELEASE=True
						EndIf
						EVENT\GAD_RELEASE=True
					Else
						EVENT\GAD_LOCK=GUI_ACTIVEGAD\OBJ
					EndIf
				EndIf
				GUI_ACTIVEGAD=Null
				GUI_CLICKEVENT=ms_WAITRELEASE
				GUI_LMBDWN=False:GUI_RMBDWN=False
			Else
				If GUI_GADOVER<>Null
					If GUI_GADOVER\ACTIVE=True And GUI_GADOVER\STATUS=gad_SHOW
						GUI_PROCESS_GADOVER(GUI_GADOVER)
						EVENT\GAD_OVER=GUI_GADOVER\OBJ
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
		
End Function

Function GUI_PROCESS_PARENT(GAD.GAD)
	SetBuffer BackBuffer():Viewport 0,0,GUI_GFXW,GUI_GFXH:Origin 0,0:GUI_OX=0:GUI_OY=0:GUI_VPX=0:GUI_VPY=0:GUI_VPW=GUI_GFXW:GUI_VPH=GUI_GFXH
	If (GAD\PARENT\ACTIVE=True Or GAD\PARENT\TYP=gad_TEXTAREA) And (GUI_LMBDWN=True Or GUI_RMBDWN=True)
		Select GAD\PARENT\TYP
			Case gad_PROP
				If GAD\PAD[1]=0
					If GAD\PARENT\FPAD[1]<>0
						XL_PLUS#=GAD\PARENT\FPAD[1]
					Else
						XL_PLUS#=GAD\PARENT\FPAD[0]
					EndIf
					If GAD=GAD\PARENT\LINK[0]
						If GUI_LMBDWN=True
							GAD\PARENT\FVAL=FLIMIT(GAD\PARENT\FVAL-XL_PLUS,GAD\PARENT\FMIN,GAD\PARENT\FMAX)
							GAD\PARENT\VAL=Int(GAD\PARENT\FVAL);QLIMIT(GAD\PARENT\VAL-1,GAD\PARENT\MIN,GAD\PARENT\MAX)
						Else
							GAD\PARENT\FVAL=FLIMIT(GAD\PARENT\FVAL-(XL_PLUS*10),GAD\PARENT\FMIN,GAD\PARENT\FMAX)
							GAD\PARENT\VAL=Int(GAD\PARENT\FVAL);QLIMIT(GAD\PARENT\VAL-10,GAD\PARENT\MIN,GAD\PARENT\MAX)
						EndIf						
					Else
						If GUI_LMBDWN=True
							GAD\PARENT\FVAL=FLIMIT(GAD\PARENT\FVAL+XL_PLUS,GAD\PARENT\FMIN,GAD\PARENT\FMAX)
							GAD\PARENT\VAL=Int(GAD\PARENT\FVAL);QLIMIT(GAD\PARENT\VAL+1,GAD\PARENT\MIN,GAD\PARENT\MAX)
						Else
							GAD\PARENT\FVAL=FLIMIT(GAD\PARENT\FVAL+(XL_PLUS*10),GAD\PARENT\FMIN,GAD\PARENT\FMAX)
							GAD\PARENT\VAL=Int(GAD\PARENT\FVAL);QLIMIT(GAD\PARENT\VAL+10,GAD\PARENT\MIN,GAD\PARENT\MAX)
						EndIf
					EndIf
					GUI_REFRESH_GAD(GAD\PARENT\OBJ)
				EndIf
				If GUI_CLICKEVENT=ms_LMBHIT Or GUI_CLICKEVENT=ms_RMBHIT
					GAD\PAD[1]=20
				Else
					GAD\PAD[1]=QLIMIT(GAD\PAD[1]-1,0,999)
				EndIf
				EVENT\GAD_NEWVAL=True
			Case gad_INTEGER
				If GAD\PAD[1]=0
					If GAD=GAD\PARENT\LINK[1]
						If GUI_LMBDWN=True
							GAD\PARENT\VAL=QLIMIT(GAD\PARENT\VAL-GAD\PARENT\PAD[0],GAD\PARENT\MIN,GAD\PARENT\MAX)
						Else
							GAD\PARENT\VAL=QLIMIT(GAD\PARENT\VAL-(GAD\PARENT\PAD[0]*10),GAD\PARENT\MIN,GAD\PARENT\MAX)
						EndIf						
					Else
						If GUI_LMBDWN=True
							GAD\PARENT\VAL=QLIMIT(GAD\PARENT\VAL+GAD\PARENT\PAD[0],GAD\PARENT\MIN,GAD\PARENT\MAX)
						Else
							GAD\PARENT\VAL=QLIMIT(GAD\PARENT\VAL+(GAD\PARENT\PAD[0]*10),GAD\PARENT\MIN,GAD\PARENT\MAX)
						EndIf
					EndIf
					GUI_REFRESH_GAD(GAD\PARENT\OBJ)
				EndIf
				If GUI_CLICKEVENT=ms_LMBHIT Or GUI_CLICKEVENT=ms_RMBHIT
					GAD\PAD[1]=20
				Else
					GAD\PAD[1]=QLIMIT(GAD\PAD[1]-1,0,999)
				EndIf
				EVENT\GAD_NEWVAL=True
			Case gad_FLOAT
				If GAD\PAD[1]=0
					If GAD=GAD\PARENT\LINK[1]
						If GUI_LMBDWN=True
							GAD\PARENT\FVAL=FLIMIT(GAD\PARENT\FVAL-GAD\PARENT\FPAD[0],GAD\PARENT\FMIN,GAD\PARENT\FMAX)
						Else
							GAD\PARENT\FVAL=FLIMIT(GAD\PARENT\FVAL-(GAD\PARENT\FPAD[0]*10),GAD\PARENT\FMIN,GAD\PARENT\FMAX)
						EndIf						
					Else
						If GUI_LMBDWN=True
							GAD\PARENT\FVAL=FLIMIT(GAD\PARENT\FVAL+GAD\PARENT\FPAD[0],GAD\PARENT\FMIN,GAD\PARENT\FMAX)
						Else
							GAD\PARENT\FVAL=FLIMIT(GAD\PARENT\FVAL+(GAD\PARENT\FPAD[0]*10),GAD\PARENT\FMIN,GAD\PARENT\FMAX)
						EndIf
					EndIf
					GUI_REFRESH_GAD(GAD\PARENT\OBJ)
				EndIf
				If GUI_CLICKEVENT=ms_LMBHIT Or GUI_CLICKEVENT=ms_RMBHIT
					GAD\PAD[1]=20
				Else
					GAD\PAD[1]=QLIMIT(GAD\PAD[1]-1,0,999)
				EndIf
				EVENT\GAD_NEWVAL=True
			Case gad_TXTLIST,gad_TREELIST
				GAD\PARENT\PAD[1]=(GAD\PARENT\LINK[0]\VAL)
				GAD\PARENT\LINK[0]\FVAL=GAD\PARENT\PAD[1]
				GUI_REFRESH_GAD(GAD\PARENT\OBJ)
			Case gad_TOOLBAR
				If GAD\PAD[1]=0
					If GAD=GAD\PARENT\LINK[0]					;<
						XL_PLUS=2
					Else
						If GAD=GAD\PARENT\LINK[1]				;>
							XL_PLUS=-2
						EndIf
					EndIf
					GUI_TOOLBAR_SCROLL(GAD\PARENT,XL_PLUS)
				EndIf
				If GUI_CLICKEVENT=ms_LMBHIT Or GUI_CLICKEVENT=ms_RMBHIT
					GAD\PAD[1]=20
				Else
					GAD\PAD[1]=QLIMIT(GAD\PAD[1]-1,0,999)
				EndIf
			Case gad_TEXTAREA
				If GAD=GAD\PARENT\LINK[0]
					GAD\PARENT\INP\INPUTBNK=Null
					GAD\PARENT\LINK[0]\FVAL=GAD\PARENT\LINK[0]\VAL
					GUI_TEXTOUTPUT(GAD\PARENT)
					GUI_REFRESH_GAD(GAD\PARENT\OBJ)
				Else
					If GAD=GAD\PARENT\LINK[1]
						GAD\PARENT\INP\INPUTBNK=Null
						GAD\PARENT\INP\IMG_X=Int(GAD\PARENT\LINK[1]\FVAL)
						GUI_REFRESH_GAD(GAD\PARENT\OBJ)
					EndIf
				EndIf
			Case gad_IMGAREA
				GUI_REFRESH_GAD(GAD\PARENT\OBJ)
			End Select
	EndIf
	If GAD\PARENT\PARENT<>Null
		GUI_PROCESS_PARENT(GAD\PARENT)
	EndIf
End Function

Function GUI_PROCESS_GADRELEASE(GAD.GAD)
	If GAD\MENU<>Null
		If GAD\PAD[8]=False And GUI_CLICKEVENT=ms_LMBREL
			XL_DOMENU=True
		EndIf
		If GAD\PAD[8]=True And GUI_CLICKEVENT=ms_RMBREL
			XL_DOMENU=True
		EndIf
		If GAD\TYP=gad_MENUBUT
			XL_DOMENU=False
		EndIf
		If XL_DOMENU=True
			SetBuffer BackBuffer():Viewport 0,0,GUI_GFXW,GUI_GFXH:Origin 0,0:GUI_OX=0:GUI_OY=0:GUI_VPX=0:GUI_VPY=0:GUI_VPW=GUI_GFXW:GUI_VPH=GUI_GFXH
			GUI_WINMODE=Wmode_POPUP
			GUI_MENU_CLEARORDER()
			XL_X=QLIMIT(MouseX(),0,GUI_GFXW-GAD\MENU\W)
			XL_Y=QLIMIT(MouseY(),0,GUI_GFXH-GAD\MENU\H)
			XL_MENU.MENUORDER=GUI_MENU_OPENMENU(GAD\MENU,XL_X,XL_Y,GAD\MENU\W,1,XL_X,XL_Y)
			XL_MENU\AX=XL_MENU\X
			XL_MENU\AY=XL_MENU\Y
			GUI_QMENU_OPEN=True
			GUI_CLICKEVENT=ms_WAITRELEASE	
		EndIf
	Else
		Select GAD\TYP
			Case gad_BUTTON
				If GAD\PARENT<>Null
					Select GAD\PARENT\TYP
						Case gad_PANEL
							If GAD\PARENT\ACTIVE=True
								GUI_PANEL_TOGGLE(GAD\PARENT)
							EndIf
					End Select
				EndIf
			Case gad_INTEGER,gad_FLOAT,gad_TEXTINP,gad_TEXTAREA
				If GAD\ACTIVE=True
					GUI_WINMODE=Wmode_INPUT
					GUI_INPUTGAD=GAD
					GUI_CURX=-1:GUI_CURY=-1
				EndIf
			Case gad_3D
				If GAD\ACTIVE=True
					GUI_3DCAM=GAD\OBJ
				EndIf
		End Select
		If GUI_WINMODE=Wmode_NONE
			If GAD=GAD\WIN\gad_MIN
				If GAD\WIN\STATUS=win_OPEN
					GUI_WINMODE=Wmode_MIN
					GAD\ON=True
				Else
					GAD\ON=False
					GUI_WINMODE=Wmode_MAX
				EndIf
			EndIf
			If GAD=GAD\WIN\gad_BACK
				GUI_WINMODE=Wmode_BACK
				GUI_ACTIVEWIN=GAD\WIN
			EndIf
			If GAD=GAD\WIN\gad_QUIT
				GUI_ACTIVEWIN=GAD\WIN
				EVENT\WIN_KILL=True
			EndIf
		EndIf
	EndIf
	GUI_GADHIT=Null
End Function

Function GUI_PROCESS_GADOVER(GAD.GAD)
	SetBuffer BackBuffer():Viewport 0,0,GUI_GFXW,GUI_GFXH:Origin 0,0:GUI_OX=0:GUI_OY=0:GUI_VPX=0:GUI_VPY=0:GUI_VPW=GUI_GFXW:GUI_VPH=GUI_GFXH
	GUI_GAD_BUFFER(GAD,GAD\WIN\X,GAD\WIN\Y)
	If GAD\PARENT<>Null
		GAD\STATUS=GAD\PARENT\STATUS
		If GAD\PARENT\TYP<>gad_TEXTAREA
			GAD\ACTIVE=GAD\PARENT\ACTIVE
		EndIf
	EndIf	
	If GAD\ACTIVE=True And GAD\STATUS=gad_SHOW
		Select GAD\TYP
			Case gad_TXTLIST,gad_TREELIST
				GUI_LSTITMHIT=Null
				XL_MX=MouseX()-(GAD\X+GAD\WIN\X+GUI_BUFFERX(GAD))
				XL_MY=MouseY()-(GAD\Y+GAD\WIN\Y+GUI_BUFFERY(GAD))
				For XL_ITM.LISTITM=Each LISTITM
					If XL_ITM\LIST=GAD\LIST And XL_ITM\VIS=True And XL_ITM\ACTIVE=True
						XL_X=GAD\WIN\X+GAD\X
						XL_Y=(XL_ITM\Y+GAD\WIN\Y+GAD\Y)+3
						XL_TX=XL_X+(XL_ITM\XP*16)
						XL_TW=GAD\W-(XL_ITM\XP*16)
						If RectsOverlap(XL_ITM\X,XL_ITM\Y,GAD\W,17,XL_MX,XL_MY,1,1)
							If XL_MY<(GAD\WIN\Y+GAD\Y+GAD\H)-1
								If XL_ITM\ACTIVE=True
									GUI_LSTITMHIT=XL_ITM
									EVENT\LISTITEM=XL_ITM\OBJ
									EVENT\LIST=XL_ITM\LIST\OBJ
								EndIf
								If XL_ITM\TYP<5 Or XL_ITM\TYP=8
									Color 0,0,0
									Rect XL_TX,XL_Y-2,XL_TW,18,0
									Color 102,109,150
									Rect XL_TX+1,XL_Y-1,XL_TW-2,16
									GUI_FONTCOL($FFFFFF)
								EndIf
								XL_X=GAD\WIN\X+GAD\X+3
								XL_Y=XL_Y-1
								XL_TX=XL_X+(XL_ITM\XP*16)
								XL_TW=GAD\W-(XL_ITM\XP*16)
								Select XL_ITM\TYP
									Case 0,2,3,8
										If XL_ITM\ICON<>Null
											GUI_DRAWICON(XL_ITM\ICON,XL_TX,(XL_Y+8)-XL_ITM\ICON\H/2,XL_ITM\ON,XL_ITM\ACTIVE)
											GUI_TEXT(XL_ITM\TXT,XL_TX+18,XL_Y+1,XL_TW-(4+18))
										Else
											GUI_TEXT(XL_ITM\TXT,XL_TX,XL_Y+1,XL_TW-4)
										EndIf
									Case 5							;INPUT
									Case 6							;INT
									Case 7							;FLOAT
									Case 1
								;		If XL_ITM\OPEN=True
											GUI_DRAWICON(icn_LISTDIR,XL_TX,XL_Y,XL_ITM\OPEN,XL_ITM\ACTIVE)
								;		Else
									;		GUI_DRAWICON(icn_DIRCLOSE,XL_TX,XL_Y,0,XL_ITM\ACTIVE)
									;	EndIf
										GUI_FONTCOL($FFFFFF)
										If XL_ITM\ICON<>Null
											GUI_DRAWICON(XL_ITM\ICON,XL_TX+17,XL_Y,XL_ITM\ON,XL_ITM\ACTIVE)
											GUI_TEXT(XL_ITM\TXT,17+XL_TX+18,XL_Y+1,XL_TW-(17+4+18))
										Else
											GUI_TEXT(XL_ITM\TXT,17+XL_TX,XL_Y+1,XL_TW-(4+17))
										EndIf
									End Select
								Exit
							EndIf
						EndIf
					EndIf
					
				Next
			Case gad_IMGBUT,gad_IMGRAD
				If GAD\ICON\IMG[2]<>0
					If GAD\PAD[0]=False
						DrawImage GAD\ICON\IMG[2],GAD\WIN\X+GAD\X,GAD\WIN\Y+GAD\Y
					Else
						XL_XP=(GAD\W/2)-(GAD\ICON\W/2)
						XL_YP=(GAD\H/2)-(GAD\ICON\H/2)
						DrawImage GAD\ICON\IMG[2],GAD\WIN\X+GAD\X+XL_XP,GAD\WIN\Y+GAD\Y+XL_YP
					EndIf
				Else
					If GAD\PAD[0]=False
					;	If GAD\TOOL<>Null
							GUI_GFXBOX(GAD\X+GAD\WIN\X-1,GAD\Y+GAD\WIN\Y-1,GAD\W+2,GAD\H+2,GAD\WIN\WCOL[0],GAD\WIN\WCOL[1],GAD\WIN\WCOL[2],False,False,False,GAD\WIN\WCOL[3],True)
					;	EndIf
						DrawImage GAD\ICON\IMG[GAD\ON],GAD\X+GAD\WIN\X,GAD\Y+GAD\WIN\Y
					EndIf
				EndIf
			Case gad_MENUBUT
				GUI_GFXBOX(GAD\X+GAD\WIN\X,GAD\Y+GAD\WIN\Y,GAD\W,GAD\H,GAD\COL[0],GAD\COL[1],GAD\COL[2],False,False,False,GAD\COL[3],False)
			Case gad_TAB
				If GAD\ICON<>Null
					If GAD\PAD[1]=False
						GUI_GFXBOX(GAD\X+GAD\WIN\X,GAD\Y+GAD\WIN\Y,GAD\W,GAD\H,GAD\COL[0],GAD\COL[1],GAD\COL[2],False,False,False,GAD\COL[3],False)	
					EndIf
				EndIf
		End Select
	EndIf
	SetBuffer BackBuffer():Viewport 0,0,GUI_GFXW,GUI_GFXH:Origin 0,0:GUI_OX=0:GUI_OY=0:GUI_VPX=0:GUI_VPY=0:GUI_VPW=GUI_GFXW:GUI_VPH=GUI_GFXH
End Function



Function GUI_PROCESS_MENU()
	SetBuffer BackBuffer():Viewport 0,0,GUI_GFXW,GUI_GFXH:Origin 0,0:GUI_OX=0:GUI_OY=0:GUI_VPX=0:GUI_VPY=0:GUI_VPW=GUI_GFXW:GUI_VPH=GUI_GFXH
	GUI_MENUOVER=Null
	XL_ITMHIT.MENUITEM=Null
	xl_MENU.MENUORDER=GUI_MENU_DRAW()
	If XL_MENU<>Null
		If XL_MENU<>Last MENUORDER
			XL_FIND.MENUORDER=Last MENUORDER
			While XL_MENU<>XL_FIND
				If XL_FIND\IMG>0
					FreeImage XL_FIND\IMG
				EndIf
				Delete Last MENUORDER
				XL_FIND=Last MENUORDER
			Wend
		EndIf
		XL_Y=XL_MENU\Y+3
		XL_X=XL_MENU\X
		EVENT\MENU=XL_MENU\MENU\OBJ
		EVENT\MENU_OPEN=True
		For XL_ITM.MENUITEM=Each MENUITEM
			If XL_ITM\MENU=XL_MENU\MENU
				If RectsOverlap(MouseX(),MouseY(),1,1,XL_MENU\X,XL_Y,XL_MENU\MENU\W,18) And (XL_ITM\ACT And XL_ITM\MENU\ACT)
					If XL_MENU\MENU\W>23
						GUI_GFXBOX(XL_X+22,XL_Y-1,XL_MENU\MENU\W-24,20,XL_MENU\MENU\COL[0],XL_MENU\MENU\COL[1],XL_MENU\MENU\COL[2],False,True,False,XL_MENU\MENU\COL[3],True,-16)
					Else
						Color 0,0,0
						Rect XL_X,XL_Y-1,XL_MENU\MENU\W,1
						Rect XL_X,XL_Y+18,XL_MENU\MENU\W,1;20,0
						Color 182,189,230
						Rect XL_X+1,XL_Y,XL_MENU\MENU\W-2,18
					EndIf
					XL_ITMHIT=XL_ITM
					Select XL_ITM\TYP
						Case 0
							GUI_MENU_OUTPUT(XL_ITM,3+XL_X,XL_Y,4)
						Case 1
							GUI_MENU_OUTPUT(XL_ITM,XL_X+3,XL_Y,4)
						Case 2
							GUI_MENU_OUTPUT(XL_ITM,3+XL_X,XL_Y,4)
						Case 5
							GUI_MENU_OUTPUT(XL_ITM,3+XL_X,XL_Y,4)
							DrawImage icn_RARROW\IMG[0],XL_X+XL_MENU\MENU\W-11,XL_Y+4
							XL_NX=QLIMIT(XL_X+XL_MENU\MENU\W-1,0,GUI_GFXW-XL_ITM\NXT_MNU\W)
							XL_NY=QLIMIT(XL_Y-3,0,GUI_GFXH-XL_ITM\NXT_MNU\H)
							XL_NEW.MENUORDER=GUI_MENU_OPENMENU(XL_ITM\NXT_MNU,XL_X,XL_Y-1,XL_MENU\MENU\W-1,20,XL_NX,XL_NY)
							If XL_NEW\IMG>0
								FreeImage XL_NEW\IMG
							EndIf
							XL_NEW\IMG=CreateImage(XL_MENU\MENU\W,20)
							GrabImage XL_NEW\IMG,XL_X,XL_Y-1
						End Select
					Exit
				Else
					XL_Y=XL_Y+19
				EndIf
			EndIf
		Next
		
		If GUI_CLICKEVENT=ms_LMBHIT And XL_ITMHIT<>Null
			EVENT\MENU_ITEM=XL_ITMHIT\OBJ
			Select XL_ITMHIT\TYP
				Case 1
					If XL_ITMHIT\ON=True
						XL_ITMHIT\ON=False
					Else
						XL_ITMHIT\ON=True
					EndIf
					EVENT\MENU_TOGGLE=True
					GUI_MENU_REFRESH(XL_ITMHIT\MENU\OBJ)
				Case 2
					If XL_ITMHIT\ON=False
						GUI_MENU_GROUP(XL_ITMHIT\MENU,XL_ITMHIT\GRP)
						XL_ITMHIT\ON=True
						EVENT\MENU_TOGGLE=True
						EVENT\MENU_GRP_TOGGLE=True
						EVENT\MENU_GRP=XL_ITMHIT\GRP
						GUI_MENU_REFRESH(XL_ITMHIT\MENU\OBJ)
					EndIf
				Default
					GUI_CLICKEVENT=ms_WAITRELEASE
					GUI_WINMODE=Wmode_NONE
					GUI_MENUHIT=XL_ITMHIT
					GUI_WINMODE=Wmode_NONE
					GUI_CLICKEVENT=ms_WAITRELEASE
					GUI_ACTIVEGAD=Null
					GUI_LMBDWN=False
					GUI_RMBDWN=False
			End Select
		Else
			If GUI_CLICKEVENT=ms_LMBHIT
				If RectsOverlap(MouseX(),MouseY(),1,1,XL_MENU\AX,XL_MENU\AY,XL_MENU\AW,XL_MENU\AH)
					GUI_CLICKEVENT=ms_WAITRELEASE
					GUI_WINMODE=Wmode_NONE
					GUI_MENU_CLEARORDER()
					GUI_WINMODE=Wmode_NONE
					GUI_CLICKEVENT=ms_WAITRELEASE
					GUI_ACTIVEGAD=Null
					GUI_LMBDWN=False
					GUI_RMBDWN=False
				EndIf
			EndIf
		EndIf
	Else
		If GUI_LMBDWN=False
			If GUI_QMENU_OPEN=False
				GAD.GAD=First GAD
				While GAD<>Null
					If GAD\TYP=gad_MENUBUT And GAD\WIN=GUI_ACTIVEWIN
						If RectsOverlap(MouseX(),MouseY(),1,1,GAD\X+GAD\WIN\X,GAD\Y+GAD\WIN\Y,GAD\W,GAD\H)
							If GAD\ACTIVE=True And GAD\STATUS=gad_SHOW And (GAD\TAB=0 Or GAD\TAB=GAD\WIN\TAB)
								GUI_CLICKEVENT=ms_LMBHIT
								GUI_PROCESS_GADDOWN(GAD)
								XL_DONE=True
							EndIf
						EndIf
					EndIf
					GAD=After GAD
					If XL_DONE=True
						GAD=Null
					EndIf
				Wend
			EndIf
		Else
			GUI_CLICKEVENT=ms_WAITRELEASE
			GUI_WINMODE=Wmode_NONE
			GUI_MENU_CLEARORDER()
		EndIf
	EndIf
	
End Function

Function GUI_PROCESS_MOUSE()
	GUI_DBLCLK=False
	Select GUI_CLICKEVENT
		Case ms_NONE
			If MouseDown(1)
				GUI_CLICKEVENT=ms_LMBHIT
				GUI_LMBDWN=True
				XL_MILLISEC=MilliSecs()
				If XL_MILLISEC-GUI_CLKCNT<220
					GUI_DBLCLK=True
					GUI_CLKCNT=XL_MILLISEC
				Else
					GUI_CLKCNT=XL_MILLISEC
					GUI_DBLCLK=False
				EndIf
			Else
				If MouseDown(2)
					GUI_CLICKEVENT=ms_RMBHIT
					GUI_RMBDWN=True
				EndIf
			EndIf
		Case ms_LMBHIT,ms_LMBHLD
			If MouseDown(1)
				GUI_CLICKEVENT=ms_LMBHLD
				GUI_LMBDWN=True
			Else
				GUI_CLICKEVENT=ms_LMBREL
				GUI_LMBDWN=False
			EndIf
		Case ms_RMBHIT,ms_RMBHLD
			If MouseDown(2)
				GUI_CLICKEVENT=ms_RMBHLD
				GUI_RMBDWN=True
			Else
				GUI_CLICKEVENT=ms_RMBREL
				GUI_RMBDWN=False
			EndIf
		Case ms_LMBREL,ms_RMBREL
			GUI_CLICKEVENT=ms_NONE
			GUI_LMBDWN=False:GUI_RMBDWN=False
		Case ms_WAITRELEASE
			If MouseDown(1)=0 And MouseDown(2)=0
				GUI_CLICKEVENT=ms_NONE
			Else
				GUI_LMBDWN=False:GUI_RMBDWN=False
			EndIf
	End Select
End Function

Function GUI_PROCESS_SELECTOR()
	SetBuffer BackBuffer():Viewport 0,0,GUI_GFXW,GUI_GFXH:Origin 0,0:GUI_OX=0:GUI_OY=0:GUI_VPX=0:GUI_VPY=0:GUI_VPW=GUI_GFXW:GUI_VPH=GUI_GFXH
	GAD.GAD=GUI_SELECTOR
	WIN.WIN=GAD\WIN
	Select GUI_SELECTOR\TYP
		Case gad_COMBO
			XL_BH=10
			If GAD\IMG=0
				For XL_ITM.LISTITM=Each LISTITM
					If XL_ITM\LIST=GAD\LIST
						XL_ITM\SELECTED=False
					EndIf
				Next
				If GAD\PAD[4]=True
					GAD\IMG=CreateImage(GAD\W,GAD\LINK[0]\H)
				Else
					GAD\IMG=CreateImage(GAD\W,(GAD\PAD[3]*17)+2)
				EndIf
				SetBuffer ImageBuffer(GAD\IMG)
				ClsColor 255,0,255
				Cls
				SetBuffer BackBuffer()
				ClsColor 0,0,0
				MaskImage GAD\IMG,255,0,255
				GAD\LINK[0]\LINK[0]\LINK[0]\VAL=0
				GAD\LINK[0]\LINK[0]\PAD[1]=GAD\LINK[0]\LINK[0]\LINK[0]\VAL
				If GAD\PAD[4]=True
					GAD\LINK[0]\H=GAD\LINK[0]\LINK[0]\H+16
					GAD\LINK[0]\LINK[0]\Y=GAD\LINK[0]\Y+20
					If GAD\PAD[0]=True			;<Y
						GUI_DRAWBUTTON(GAD\LINK[0],True,0,0,1)
						GUI_GFXBOX(GAD\LINK[0]\X,GAD\LINK[0]\Y,GAD\W,XL_BH,GAD\COL[0],GAD\COL[1],GAD\COL[2],True)
						GUI_GFXBOX(GAD\LINK[0]\X,GAD\LINK[0]\Y+GAD\LINK[0]\H-(XL_BH),GAD\W,XL_BH,GAD\COL[0],GAD\COL[1],GAD\COL[2],True)
						DrawImage icn_DARROW\IMG[0],(GAD\LINK[0]\X)+(GAD\W/2)-(icn_UARROW\W/2),GAD\LINK[0]\Y+GAD\LINK[0]\H-(XL_BH)
						DrawImage icn_UARROW\IMG[0],(GAD\LINK[0]\X)+(GAD\W/2)-(icn_UARROW\W/2),GAD\LINK[0]\Y+1
					Else
						GUI_DRAWBUTTON(GAD\LINK[0],True,0,0,1)
						GUI_GFXBOX(GAD\LINK[0]\X,GAD\LINK[0]\Y,GAD\W,XL_BH,GAD\COL[0],GAD\COL[1],GAD\COL[2],True)
						GUI_GFXBOX(GAD\LINK[0]\X,GAD\LINK[0]\Y+GAD\LINK[0]\H-(XL_BH),GAD\W,XL_BH,GAD\COL[0],GAD\COL[1],GAD\COL[2],True)
						DrawImage icn_UARROW\IMG[0],(GAD\LINK[0]\X)+(GAD\W/2)-(icn_UARROW\W/2),GAD\LINK[0]\Y+1
						DrawImage icn_DARROW\IMG[0],(GAD\LINK[0]\X)+(GAD\W/2)-(icn_UARROW\W/2),GAD\LINK[0]\Y+GAD\LINK[0]\H-(XL_BH)
					EndIf
				Else
					XL_H=GAD\LINK[0]\H
					GAD\LINK[0]\H=(GAD\PAD[3]*17)+2
					GAD\LINK[0]\LINK[0]\Y=GAD\LINK[0]\Y
					GUI_DRAWBUTTON(GAD\LINK[0],True,0,0,1)
					GAD\LINK[0]\H=XL_H
				EndIf
				If GAD\LIST<>Null
					GUI_LIST_DRAW(GAD\LIST,GAD\LINK[0]\LINK[0],True)
				EndIf
				Color 0,0,0
				GrabImage GAD\IMG,GAD\LINK[0]\X,GAD\LINK[0]\Y
				If GAD\LIST<>Null
					GUI_LIST_DRAW(GAD\LIST,GAD\LINK[0]\LINK[0],True)
					MaskImage GAD\LIST\IMG,255,0,255
				EndIf
			Else
				SetBuffer BackBuffer()
				If GAD\PAD[4]=False
					If GAD\PAD[0]=False
						XL_BH=1
					Else
						XL_BH=19
						XL_HH=18
					EndIf
				EndIf
				DrawBlock GAD\IMG,GAD\LINK[0]\X,GAD\LINK[0]\Y+XL_HH
				If GAD\LIST<>Null
					DrawBlock GAD\LIST\IMG,GAD\LINK[0]\X+1,GAD\LINK[0]\Y+XL_BH;+5
				Else
				;	Color 255,255,255
				;	Rect GAD\LINK[0]\X+1,GAD\LINK[0]\Y+XL_BH,GAD\LINK[0]\W,GAD\LINK[0]\H
				EndIf
				If GAD\PAD[0]=True
					XL_Y1=GAD\LINK[0]\Y
					XL_Y2=GAD\LINK[0]\Y+GAD\LINK[0]\H-(XL_BH)
				Else
					XL_Y1=GAD\LINK[0]\Y
					XL_Y2=GAD\LINK[0]\Y+GAD\LINK[0]\H-(XL_BH)
				EndIf
				If GUI_SCROLL_LOCK=False
					XL_MZ=MouseZSpeed()
				EndIf
			
				If GUI_CLICKEVENT=ms_LMBHIT Or GUI_CLICKEVENT=ms_LMBHLD 
					If RectsOverlap(MouseX(),MouseY(),1,1,GAD\LINK[0]\X,GAD\LINK[0]\Y+XL_HH,GAD\W,ImageHeight(GAD\IMG))=False
						FreeImage GAD\IMG
						GAD\IMG=0
						GUI_WINMODE=Wmode_NONE
						GUI_CLICKEVENT=ms_WAITRELEASE
						GUI_ACTIVEGAD=Null
						GAD\ON=False
						GAD\PAD[0]=0
						GUI_LMBDWN=False
						GUI_RMBDWN=False
						GUI_REFRESH_GAD(GAD\OBJ)
					Else
						If GAD\PAD[4]=True
							If RectsOverlap(MouseX(),MouseY(),1,1,GAD\LINK[0]\X,XL_Y1,GAD\W,XL_BH)
								GUI_GFXBOX(GAD\LINK[0]\X,XL_Y1,GAD\W,XL_BH,GAD\COL[0],GAD\COL[1],GAD\COL[2],True,True,True,GAD\COL[3],True,-20)
								DrawImage icn_UARROW\IMG[0],(GAD\LINK[0]\X+1)+(GAD\W/2)-(icn_UARROW\W/2),XL_Y1+1
								XL_PLUS=-1
							EndIf
							If RectsOverlap(MouseX(),MouseY(),1,1,GAD\LINK[0]\X,XL_Y2,GAD\W,XL_BH)
								GUI_GFXBOX(GAD\LINK[0]\X,XL_Y2,GAD\W,XL_BH,GAD\COL[0],GAD\COL[1],GAD\COL[2],True,True,True,GAD\COL[3],True,-20)
								DrawImage icn_DARROW\IMG[0],(GAD\LINK[0]\X+1)+(GAD\W/2)-(icn_UARROW\W/2),XL_Y2
								XL_PLUS=1
							EndIf
						EndIf
						If GAD\LIST<>Null
							If RectsOverlap(MouseX(),MouseY(),1,1,GAD\LINK[0]\X,GAD\LINK[0]\Y+XL_BH,ImageWidth(GAD\LIST\IMG),ImageHeight(GAD\LIST\IMG))
								GUI_CLICKEVENT=ms_WAITRELEASE
								If GUI_LSTITMHIT<>Null
									GAD\CAP$=GUI_LSTITMHIT\TXT$
									GAD\ICON=GUI_LSTITMHIT\ICON
									GUI_LSTITMHIT\SELECTED=True
									EVENT\SELECTOR_HIT=True
									EVENT\GAD=GAD\OBJ
									EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
									EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
								EndIf
								FreeImage GAD\IMG
								GAD\IMG=0
								GUI_WINMODE=Wmode_NONE
								GUI_CLICKEVENT=ms_WAITRELEASE
								GAD\ON=False
								GAD\PAD[0]=0
								GUI_ACTIVEGAD=Null
								GUI_LMBDWN=False
								GUI_RMBDWN=False
								GUI_REFRESH_GAD(GAD\OBJ)
							EndIf
							If XL_PLUS<>0
								If GAD\PAD[1]=0
									GAD\LINK[0]\LINK[0]\LINK[0]\VAL=QLIMIT(GAD\LINK[0]\LINK[0]\LINK[0]\VAL+XL_PLUS,GAD\LINK[0]\LINK[0]\LINK[0]\MIN,GAD\LINK[0]\LINK[0]\LINK[0]\MAX)
									GAD\LINK[0]\LINK[0]\PAD[1]=GAD\LINK[0]\LINK[0]\LINK[0]\VAL
									GUI_LIST_DRAW(GAD\LIST,GAD\LINK[0]\LINK[0])
								EndIf
								If GUI_CLICKEVENT=ms_LMBHIT
									GAD\PAD[1]=20
								Else
									GAD\PAD[1]=QLIMIT(GAD\PAD[1]-1,0,9999)
								EndIf
							EndIf
						EndIf
					EndIf
				Else
					XL_PLUS=-XL_MZ
					If XL_PLUS<>0
						If GAD\PAD[1]=0
							GAD\LINK[0]\LINK[0]\LINK[0]\VAL=QLIMIT(GAD\LINK[0]\LINK[0]\LINK[0]\VAL+XL_PLUS,GAD\LINK[0]\LINK[0]\LINK[0]\MIN,GAD\LINK[0]\LINK[0]\LINK[0]\MAX)
							GAD\LINK[0]\LINK[0]\PAD[1]=GAD\LINK[0]\LINK[0]\LINK[0]\VAL
							GUI_LIST_DRAW(GAD\LIST,GAD\LINK[0]\LINK[0])
						EndIf
						If GUI_CLICKEVENT=ms_LMBHIT
							GAD\PAD[1]=20
						Else
							GAD\PAD[1]=QLIMIT(GAD\PAD[1]-1,0,9999)
						EndIf
					EndIf
					GAD\PAD[1]=0
					If GAD\LIST<>Null
						If RectsOverlap(MouseX(),MouseY(),1,1,GAD\LINK[0]\X+4,GAD\LINK[0]\Y+XL_BH+5,ImageWidth(GAD\LIST\IMG)+2,ImageHeight(GAD\LIST\IMG)+2)
							XL_IX=GAD\LINK[0]\X+1
							XL_IY=GAD\LINK[0]\Y+XL_BH;+5
							XL_IW=ImageWidth(GAD\LIST\IMG)
							GUI_LSTITMHIT=Null
							For XL_ITM.LISTITM=Each LISTITM
								If XL_ITM\LIST=GAD\LIST And XL_ITM\VIS=True
									If RectsOverlap(MouseX(),MouseY(),1,1,XL_ITM\X+XL_IX,XL_ITM\Y+XL_IY,XL_IW,16)
										Select XL_ITM\TYP
											Case 4,5,6,7
											Default
												If XL_ITM\ACTIVE=True
													GUI_LSTITMHIT=XL_ITM
													EVENT\LISTITEM=XL_ITM\OBJ
													EVENT\LIST=XL_ITM\LIST\OBJ
												EndIf
												Color 0,0,0
												Rect XL_IX-1,XL_IY+XL_ITM\Y,XL_IW+2,16,0
												Color 182-80,189-80,230-80
												Rect XL_IX,XL_ITM\Y+XL_IY+1,XL_IW,14
												GUI_FONTCOL($FFFFFF)
												XL_TX=XL_IX+1:XL_TY=XL_ITM\Y+XL_IY:XL_TW=XL_IW
												XL_Y=XL_TY
												If XL_ITM\ICON<>Null
													GUI_DRAWICON(XL_ITM\ICON,XL_TX,XL_Y,2,XL_ITM\ACTIVE)
													GUI_TEXT(XL_ITM\TXT,XL_TX+18,XL_Y+1,XL_TW-18)
												Else
													GUI_TEXT(XL_ITM\TXT,XL_TX,XL_Y+1,XL_TW)
												EndIf
												Exit
										End Select
									EndIf
								EndIf
							Next
						EndIf
					EndIf
				EndIf
			EndIf
		End Select
End Function

Function GUI_PROCESS_GADDOWN(GAD.GAD,XL_WINBUFF=True)
	If GAD\PARENT<>Null
		GAD\STATUS=GAD\PARENT\STATUS
		If GAD\PARENT\TYP<>gad_TEXTAREA
			GAD\ACTIVE=GAD\PARENT\ACTIVE
		EndIf
	EndIf
	If GAD\ACTIVE=True And GAD\STATUS=gad_SHOW; Or (GAD\TYP=gad_TEXTAREA And GAD\STATUS=gad_SHOW)
		GUI_GADHIT=GAD
		WIN.WIN=GAD\WIN
		If GAD\PARENT<>Null
			If GAD\PARENT\PARENT<>Null
				EVENT\GAD=GAD\PARENT\PARENT\OBJ
			Else
				EVENT\GAD=GAD\PARENT\OBJ
			EndIf
			EVENT\GAD_ACT=GAD\OBJ
		Else
			EVENT\GAD=GAD\OBJ
		EndIf
		If GUI_CLICKEVENT=ms_LMBHIT Or GUI_CLICKEVENT=ms_RMBHIT
			EVENT\GAD_HIT=True
			If GUI_CLICKEVENT=ms_LMBHIT
				EVENT\GAD_LMBHIT=True
			Else
				EVENT\GAD_RMBHIT=True
			EndIf
		EndIf
		If GUI_CLICKEVENT=ms_LMBHLD Or GUI_CLICKEVENT=ms_RMBHLD
			EVENT\GAD_HOLD=True
			If GUI_CLICKEVENT=ms_LMBHLD
				EVENT\GAD_LMBHOLD=True
			Else
				EVENT\GAD_RMBHOLD=True
			EndIf
		EndIf
		SetBuffer BackBuffer():Viewport 0,0,GUI_GFXW,GUI_GFXH:Origin 0,0:GUI_OX=0:GUI_OY=0:GUI_VPX=0:GUI_VPY=0:GUI_VPW=GUI_GFXW:GUI_VPH=GUI_GFXH
		GUI_GAD_BUFFER(GAD,WIN\X,WIN\Y)
		XL_GADON=GAD\ON
		Select GAD\TYP
			Case gad_BUTTON
				GAD\ON=True
				GUI_DRAWBUTTON(GAD,True,WIN\X,WIN\Y,GAD\BSTYLE)
				GAD\ON=False
			Case gad_SWITCH
				If GUI_CLICKEVENT=ms_LMBHIT
					If GAD\GRP=0
						GAD\ON=1-GAD\ON
						GUI_REFRESH_GAD(GAD\OBJ)
					Else
						If GAD\ON=False
							GUI_GROUP_OFF(GAD\OBJ)
							GAD\ON=True
							GUI_REFRESH_GAD(GAD\OBJ)
							EVENT\GROUP=GAD\GRP
							EVENT\GROUP_CHANGE=True
							EVENT\GAD=GAD\OBJ
						EndIf
					EndIf	
				EndIf
			Case gad_CYCLE
				If GUI_CLICKEVENT=ms_LMBHIT
					GAD\VAL=GAD\VAL+1
					If GAD\VAL=GAD\MAX
						GAD\VAL=0
					EndIf
				EndIf
				If GUI_CLICKEVENT=ms_RMBHIT
					GAD\VAL=GAD\VAL-1
					If GAD\VAL<0
						GAD\VAL=GAD\MAX-1
					EndIf
				EndIf
				If GUI_LMBDWN Or GUI_RMBDWN
					GAD\CAP$=GUI_PARSE$(GAD\TXT$,GAD\VAL)
					GUI_DRAWBUTTON(GAD,True,WIN\X,WIN\Y,gad_STYLE,16,0)
					GUI_COL(GAD\COL[2])
					Rect WIN\X+GAD\X+17,WIN\Y+GAD\Y+1,1,GAD\H-2
					Color 0,0,0
					Rect WIN\X+GAD\X+18,WIN\Y+GAD\Y+1,1,GAD\H-2
					GUI_COL(GAD\COL[1])
					Rect WIN\X+GAD\X+19,WIN\Y+GAD\Y+1,1,GAD\H-2
					GUI_GFXBOX(WIN\X+GAD\X+7,WIN\Y+GAD\Y+7,6,6,GAD\COL[0],GAD\COL[1],GAD\COL[2],True,False,True,GAD\COL[3],True,-20)
					GUI_REFRESH_GAD(GAD\OBJ)
				EndIf
			Case gad_IMGBUT
				If GAD\PAD[0]=True
					GAD\ON=True
					GUI_DRAWBUTTON(GAD,True,WIN\X,WIN\Y,GAD\BSTYLE)
					GAD\ON=False
				Else
					If GAD\ACTIVE=True
						DrawImage GAD\ICON\IMG[1],WIN\X+GAD\X,WIN\Y+GAD\Y
					Else
						DrawImage GAD\ICON\IMG[3],WIN\X+GAD\X,WIN\Y+GAD\Y
					EndIf
				EndIf
				If GUI_CLICKEVENT=ms_LMBHIT Or GUI_CLICKEVENT=ms_RMBHIT
					GAD\PAD[1]=0
				EndIf
			Case gad_IMGRAD
				If GUI_CLICKEVENT=ms_LMBHIT
					If GAD\GRP=0
						GAD\ON=1-GAD\ON
						GUI_REFRESH_GAD(GAD\OBJ)
					Else
						If GAD\ON=False
							GUI_GROUP_OFF(GAD\OBJ)
							GAD\ON=True
							GUI_REFRESH_GAD(GAD\OBJ)
							EVENT\GROUP=GAD\GRP
							EVENT\GROUP_CHANGE=True
							EVENT\GAD=GAD\OBJ
						EndIf
					EndIf	
				EndIf
			Case gad_TICK
				If GUI_CLICKEVENT=ms_LMBHIT
					GAD\ON=1-GAD\ON
					GUI_REFRESH_GAD(GAD\OBJ)
				EndIf
			Case gad_RADIO
				If GUI_CLICKEVENT=ms_LMBHIT
					If GAD\GRP=0
						GAD\ON=1-GAD\ON
						GUI_REFRESH_GAD(GAD\OBJ)
					Else
						If GAD\ON=False
							GUI_GROUP_OFF(GAD\OBJ)
							GAD\ON=True
							GUI_REFRESH_GAD(GAD\OBJ)
							EVENT\GROUP=GAD\GRP
							EVENT\GROUP_CHANGE=True
							EVENT\GAD=GAD\OBJ
						EndIf
					EndIf	
				EndIf
			Case gad_PROP
				If GAD\PAD[1]=True
					XL_MX#=QLIMIT(MouseX()-(WIN\X+GAD\X+GUI_BUFFERX(GAD))-GAD\PAD[3]/2,0,GAD\W)
					GAD\FVAL=FLIMIT(GAD\FMIN+(XL_MX/GAD\FPAD[0]),GAD\FMIN,GAD\FMAX)
					GAD\VAL=Int(GAD\FVAL)
					GUI_REFRESH_GAD(GAD\OBJ)
					GUI_MOUSE=GUI_MOUSE_HSLIDER
				Else
					XL_MX#=QLIMIT(MouseY()-(WIN\Y+GAD\Y+GUI_BUFFERY(GAD))-GAD\PAD[3]/2,0,GAD\H)
					GAD\FVAL=FLIMIT(GAD\FMIN+(XL_MX/GAD\FPAD[0]),GAD\FMIN,GAD\FMAX)
					GAD\VAL=Int(GAD\FVAL)
					GUI_REFRESH_GAD(GAD\OBJ)
					GUI_MOUSE=GUI_MOUSE_VSLIDER
				EndIf
				GUI_WINMODE=Wmode_SLIDER
			Case gad_SLIDER
				If GUI_LMBDWN=True
					If GAD\PAD[1]=True
						XL_MX#=QLIMIT(MouseX()-(WIN\X+GAD\X+GUI_BUFFERX(GAD)),0,GAD\W)
						GAD\FVAL=GAD\FMIN+(XL_MX/GAD\FPAD[0])
						GAD\VAL=Int(GAD\FVAL)
						GUI_REFRESH_GAD(GAD\OBJ)
						GUI_MOUSE=GUI_MOUSE_HSLIDER
					Else
						XL_MX#=QLIMIT(MouseY()-(WIN\Y+GAD\Y+GUI_BUFFERY(GAD)),0,GAD\H)
						GAD\FVAL=GAD\FMIN+(XL_MX/GAD\FPAD[0])
						GAD\VAL=Int(GAD\FVAL)
						GUI_REFRESH_GAD(GAD\OBJ)
						GUI_MOUSE=GUI_MOUSE_VSLIDER
					EndIf
					GUI_WINMODE=Wmode_SLIDER
				EndIf
			Case gad_TXTLIST
				XL_ITM.LISTITM=First LISTITM
				If GUI_LSTITMHIT<>Null
					If GUI_CLICKEVENT=ms_LMBHIT
						EVENT\ITM_SELECT=True
						EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
						EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
						GAD\CAP$=GUI_LSTITMHIT\TXT$
						Select GUI_LSTITMHIT\TYP
							Case 2,8
								XL_GRP.LISTGROUP=GUI_LSTITMHIT\ITEMGRP
								If GUI_CLICKEVENT=ms_LMBHIT
									EVENT\ITM_TOGGLE=True
									EVENT\ITM_SELECT=True
									EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
									EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
									If XL_GRP=GUI_LSTITMHIT\LIST\LISTGRP
										If GUI_LSTITMHIT\ON=True
											GUI_LSTITMHIT\ON=False
											GUI_LSTITMHIT\SELECTED=False
										Else
											GUI_LSTITMHIT\ON=True
											GUI_LSTITMHIT\SELECTED=True
											GAD\CAP$=GUI_LSTITMHIT\TXT$
										EndIf
									Else
										If GUI_LSTITMHIT\ON=False
											If XL_GRP\CUR<XL_GRP\MAX
												GUI_LSTITMHIT\ON=True
												GUI_LSTITMHIT\SELECTED=True
												XL_GRP\CUR=XL_GRP\CUR+1
												GUI_LSTITMHIT\TIMER=MilliSecs()
											Else
												XL_TIMER=MilliSecs()
												XL_LASTITM.LISTITM=Null
												While XL_ITM<>Null
													If XL_ITM\LIST=GAD\LIST And XL_ITM\ITEMGRP=XL_GRP And (XL_ITM\SELECTED=True Or XL_ITM\ON=True) And XL_ITM<>GUI_LSTITMHIT
														If XL_ITM\TIMER<XL_TIMER And XL_ITM\TIMER>0
															XL_TIMER=XL_ITM\TIMER
															XL_LASTITM=XL_ITM
														EndIf
													EndIf
													XL_ITM=After XL_ITM
												Wend
												
												If XL_LASTITM<>Null
													XL_LASTITM\TIMER=0
													XL_LASTITM\ON=False
													XL_LASTITM\SELECTED=False
													GUI_LSTITMHIT\SELECTED=True
													GUI_LSTITMHIT\ON=True
													GUI_LSTITMHIT\TIMER=MilliSecs()
												EndIf
												
											EndIf
											GAD\CAP$=GUI_LSTITMHIT\TXT$
										EndIf
									EndIf
									GUI_REFRESH_GAD(GAD\OBJ)
								Else
									If GUI_CLICKEVENT=ms_RMBHIT
										EVENT\ITM_RMBHIT=True
										EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
										EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
									EndIf
								EndIf
							Case 3
								If GUI_LSTITMHIT\ON=False
									GUI_LIST_GROUP_OFF(GUI_LSTITMHIT\OBJ)
									GUI_LSTITMHIT\ON=True
									EVENT\ITM_TOGGLE=True
									EVENT\ITM_GRP_TOGGLE=True
									EVENT\ITM_GRP=GUI_LSTITMHIT\GRP
								EndIf
							Default
								XL_GRP.LISTGROUP=GUI_LSTITMHIT\ITEMGRP
								If GUI_CLICKEVENT=ms_LMBHIT
									EVENT\ITM_SELECT=True
									EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
									EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
									GAD\CAP$=GUI_LSTITMHIT\TXT$
									
									If GUI_LSTITMHIT\SELECTED=True And XL_GRP=GUI_LSTITMHIT\LIST\LISTGRP
										GUI_LSTITMHIT\SELECTED=False
										GUI_LSTITMHIT\ON=False
										GUI_LSTITMHIT\TIMER=0
										EVENT\ITM_TOGGLE=True
										XL_GRP\CUR=XL_GRP\CUR-1
									Else
										If XL_GRP\MAX=1
											While XL_ITM<>Null
												If XL_ITM\LIST=GAD\LIST And XL_ITM\ITEMGRP=XL_GRP
													XL_ITM\SELECTED=False
													XL_ITM\ON=False
													XL_ITM\TIMER=0
												EndIf
												XL_ITM=After XL_ITM
											Wend
											GUI_LSTITMHIT\SELECTED=True
											GUI_LSTITMHIT\ON=True
											GUI_LSTITMHIT\TIMER=MilliSecs()
											EVENT\ITM_TOGGLE=True
										Else
											If XL_GRP\CUR<XL_GRP\MAX
												If GUI_LSTITMHIT\SELECTED=False And GUI_LSTITMHIT\ON=False
													XL_GRP\CUR=XL_GRP\CUR+1
													GUI_LSTITMHIT\SELECTED=True
													GUI_LSTITMHIT\ON=True
													GUI_LSTITMHIT\TIMER=MilliSecs()
													EVENT\ITM_TOGGLE=True
												EndIf
											Else
												XL_TIMER=MilliSecs()
												XL_LASTITM.LISTITM=Null
												If GUI_LSTITMHIT\SELECTED=False And GUI_LSTITMHIT\ON=False
													While XL_ITM<>Null
														If XL_ITM\LIST=GAD\LIST And XL_ITM\ITEMGRP=XL_GRP And (XL_ITM\SELECTED=True Or XL_ITM\ON=True) And XL_ITM<>GUI_LSTITMHIT
															If XL_ITM\TIMER<XL_TIMER And XL_ITM\TIMER>0
																XL_TIMER=XL_ITM\TIMER
																XL_LASTITM=XL_ITM
															EndIf
														EndIf
														XL_ITM=After XL_ITM
													Wend
													
													If XL_LASTITM<>Null
														XL_LASTITM\ON=False
														XL_LASTITM\SELECTED=False
														XL_LASTITM\TIMER=0
														XL_GRP\CUR=XL_GRP\MAX
														GUI_LSTITMHIT\SELECTED=True
														GUI_LSTITMHIT\ON=True
														GUI_LSTITMHIT\TIMER=MilliSecs()
														EVENT\ITM_TOGGLE=True
													EndIf
												EndIf
											EndIf
										EndIf
									EndIf
									GUI_REFRESH_GAD(GAD\OBJ)
								Else
									If GUI_CLICKEVENT=ms_RMBHIT
										EVENT\ITM_RMBHIT=True
										EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
										EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
									EndIf
								EndIf
						End Select
						GUI_REFRESH_GAD(GAD\OBJ)
					Else
						If GUI_CLICKEVENT=ms_RMBHIT
							EVENT\ITM_RMBHIT=True
							EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
							EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
						EndIf
					EndIf
					If GUI_DBLCLK=True
						EVENT\ITM_DBLCLICK=True
						EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
						EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
						GAD\CAP$=GUI_LSTITMHIT\TXT$
					EndIf
				EndIf
			Case gad_TREELIST
				XL_ITM.LISTITM=First LISTITM
				If GUI_LSTITMHIT<>Null
					Select GUI_LSTITMHIT\TYP
						Case 0
							XL_GRP.LISTGROUP=GUI_LSTITMHIT\ITEMGRP
							If GUI_CLICKEVENT=ms_LMBHIT
								EVENT\ITM_SELECT=True
								EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
								EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
								GAD\CAP$=GUI_LSTITMHIT\TXT$
								
								If GUI_LSTITMHIT\SELECTED=True And XL_GRP=GUI_LSTITMHIT\LIST\LISTGRP
									GUI_LSTITMHIT\SELECTED=False
									GUI_LSTITMHIT\ON=False
									GUI_LSTITMHIT\TIMER=0
									EVENT\ITM_TOGGLE=True
									XL_GRP\CUR=XL_GRP\CUR-1
								Else
									If XL_GRP\MAX=1
										While XL_ITM<>Null
											If XL_ITM\LIST=GAD\LIST And XL_ITM\ITEMGRP=XL_GRP
												XL_ITM\SELECTED=False
												XL_ITM\ON=False
												XL_ITM\TIMER=0
											EndIf
											XL_ITM=After XL_ITM
										Wend
										GUI_LSTITMHIT\SELECTED=True
										GUI_LSTITMHIT\ON=True
										GUI_LSTITMHIT\TIMER=MilliSecs()
										EVENT\ITM_TOGGLE=True
									Else
										If XL_GRP\CUR<XL_GRP\MAX
											If GUI_LSTITMHIT\SELECTED=False And GUI_LSTITMHIT\ON=False
												XL_GRP\CUR=XL_GRP\CUR+1
												GUI_LSTITMHIT\SELECTED=True
												GUI_LSTITMHIT\ON=True
												GUI_LSTITMHIT\TIMER=MilliSecs()
												EVENT\ITM_TOGGLE=True
											EndIf
										Else
											XL_TIMER=MilliSecs()
											XL_LASTITM.LISTITM=Null
											If GUI_LSTITMHIT\SELECTED=False And GUI_LSTITMHIT\ON=False
												While XL_ITM<>Null
													If XL_ITM\LIST=GAD\LIST And XL_ITM\ITEMGRP=XL_GRP And (XL_ITM\SELECTED=True Or XL_ITM\ON=True) And XL_ITM<>GUI_LSTITMHIT
														If XL_ITM\TIMER<XL_TIMER And XL_ITM\TIMER>0
															XL_TIMER=XL_ITM\TIMER
															XL_LASTITM=XL_ITM
														EndIf
													EndIf
													XL_ITM=After XL_ITM
												Wend
												
												If XL_LASTITM<>Null
													XL_LASTITM\ON=False
													XL_LASTITM\SELECTED=False
													XL_LASTITM\TIMER=0
													XL_GRP\CUR=XL_GRP\MAX
													GUI_LSTITMHIT\SELECTED=True
													GUI_LSTITMHIT\ON=True
													GUI_LSTITMHIT\TIMER=MilliSecs()
													EVENT\ITM_TOGGLE=True
												EndIf
											EndIf
										EndIf
									EndIf
								EndIf
								GUI_REFRESH_GAD(GAD\OBJ)
							Else
								If GUI_CLICKEVENT=ms_RMBHIT
									EVENT\ITM_RMBHIT=True
									EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
									EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
								EndIf
							EndIf
						Case 1
							If GUI_CLICKEVENT=ms_LMBHIT
								EVENT\ITM_TOGGLE=True
								EVENT\ITM_SELECT=True
								EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
								EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
								If GUI_LSTITMHIT\OPEN=True
									GUI_LSTITMHIT\OPEN=False
								Else
									GUI_LSTITMHIT\OPEN=True
								EndIf
								GUI_REFRESH_GAD(GAD\OBJ)
								GUI_REFRESH_GAD(GAD\LINK[0]\OBJ)
							Else
								If GUI_CLICKEVENT=ms_RMBHIT
									EVENT\ITM_RMBHIT=True
									EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
									EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
								EndIf
							EndIf	
						Case 2,8
							XL_GRP.LISTGROUP=GUI_LSTITMHIT\ITEMGRP
							If GUI_CLICKEVENT=ms_LMBHIT
								EVENT\ITM_TOGGLE=True
								EVENT\ITM_SELECT=True
								EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
								EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
								If XL_GRP=GUI_LSTITMHIT\LIST\LISTGRP
									If GUI_LSTITMHIT\ON=True
										GUI_LSTITMHIT\ON=False
										GUI_LSTITMHIT\SELECTED=False
									Else
										GUI_LSTITMHIT\ON=True
										GUI_LSTITMHIT\SELECTED=True
										GAD\CAP$=GUI_LSTITMHIT\TXT$
									EndIf
								Else
									If GUI_LSTITMHIT\ON=False
										If XL_GRP\CUR<XL_GRP\MAX
											GUI_LSTITMHIT\ON=True
											GUI_LSTITMHIT\SELECTED=True
											XL_GRP\CUR=XL_GRP\CUR+1
											GUI_LSTITMHIT\TIMER=MilliSecs()
										Else
											XL_TIMER=MilliSecs()
											XL_LASTITM.LISTITM=Null
											While XL_ITM<>Null
												If XL_ITM\LIST=GAD\LIST And XL_ITM\ITEMGRP=XL_GRP And (XL_ITM\SELECTED=True Or XL_ITM\ON=True) And XL_ITM<>GUI_LSTITMHIT
													If XL_ITM\TIMER<XL_TIMER And XL_ITM\TIMER>0
														XL_TIMER=XL_ITM\TIMER
														XL_LASTITM=XL_ITM
													EndIf
												EndIf
												XL_ITM=After XL_ITM
											Wend
											
											If XL_LASTITM<>Null
												XL_LASTITM\TIMER=0
												XL_LASTITM\ON=False
												XL_LASTITM\SELECTED=False
												GUI_LSTITMHIT\ON=True
												GUI_LSTITMHIT\SELECTED=True
												GUI_LSTITMHIT\TIMER=MilliSecs()
											EndIf
											
										EndIf
										GAD\CAP$=GUI_LSTITMHIT\TXT$
									EndIf
								EndIf
								GUI_REFRESH_GAD(GAD\OBJ)
							Else
								If GUI_CLICKEVENT=ms_RMBHIT
									EVENT\ITM_RMBHIT=True
									EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
									EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
								EndIf
							EndIf
						Case 3
							If GUI_CLICKEVENT=ms_LMBHIT
								EVENT\ITM_SELECT=True
								EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
								EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
								If GUI_LSTITMHIT\ON=False
									GUI_LIST_GROUP_OFF(GUI_LSTITMHIT\OBJ)
									GUI_LSTITMHIT\ON=True
									EVENT\ITM_TOGGLE=True
									EVENT\ITM_GRP_TOGGLE=True
									EVENT\ITM_GRP=GUI_LSTITMHIT\GRP
								EndIf
								GUI_REFRESH_GAD(GAD\OBJ)
							Else
								If GUI_CLICKEVENT=ms_RMBHIT
									EVENT\ITM_RMBHIT=True
									EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
									EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
								EndIf
							EndIf
					End Select
					If GUI_DBLCLK=True
						EVENT\ITM_DBLCLICK=True
						EVENT\LISTITEM=GUI_LSTITMHIT\OBJ
						EVENT\LIST=GUI_LSTITMHIT\LIST\OBJ
						GAD\CAP$=GUI_LSTITMHIT\TXT$
					EndIf
				EndIf
			Case gad_COMBO
				If GUI_CLICKEVENT=ms_LMBHIT
					GAD\ON=True
					GUI_WINMODE=Wmode_SELECTOR
					GUI_SELECTOR=GAD
					GUI_CLICKEVENT=ms_WAITRELEASE
					GAD\PAD[4]=0
					For XL_ITM.LISTITM=Each LISTITM
						If XL_ITM\LIST=GAD\LIST
							GAD\PAD[4]=GAD\PAD[4]+1
						EndIf
					Next
					If GAD\PAD[4]>GAD\PAD[3]
						GAD\PAD[4]=True
					Else
						GAD\PAD[4]=False
					EndIf
					If WIN\Y+GAD\Y+GUI_BUFFERY(GAD)+GAD\LINK[0]\H>GUI_GFXH
						GAD\LINK[0]\Y=GUI_BUFFERY(GAD)-(GAD\LINK[0]\H+1)+GAD\Y+GAD\WIN\Y
						GAD\LINK[0]\X=GUI_BUFFERX(GAD)+GAD\X+GAD\WIN\X
						GAD\PAD[0]=True
					Else
						GAD\LINK[0]\Y=GUI_BUFFERY(GAD)+GAD\H+1+GAD\Y+GAD\WIN\Y
						GAD\LINK[0]\X=GUI_BUFFERX(GAD)+GAD\X+GAD\WIN\X
						GAD\PAD[0]=False
					EndIf
					GUI_REFRESH_GAD(GAD\OBJ)
				EndIf
			Case gad_MENUBUT
				If GUI_CLICKEVENT=ms_LMBHIT
					If GAD\MENU\IMG>0
						GUI_GFXBOX(GAD\X+WIN\X,GAD\Y+WIN\Y,GAD\W,GAD\H,GAD\COL[0],GAD\COL[1],GAD\COL[2],False,True,False,GAD\COL[3],False)
						GUI_WINMODE=Wmode_POPUP
						GUI_CLICKEVENT=ms_WAITRELEASE
						GUI_MENU_CLEARORDER()
						XL_MENU.MENUORDER=GUI_MENU_OPENMENU(GAD\MENU,GAD\X+GAD\WIN\X,GAD\Y+GAD\WIN\Y,GAD\W,GAD\H,GAD\X+GAD\WIN\X,GAD\Y+GAD\WIN\Y+18)
						XL_MENU\IMG=CreateImage(GAD\W,GAD\H)
						SetBuffer BackBuffer():Viewport 0,0,GUI_GFXW,GUI_GFXH:Origin 0,0:GUI_OX=0:GUI_OY=0:GUI_VPX=0:GUI_VPY=0:GUI_VPW=GUI_GFXW:GUI_VPH=GUI_GFXH
						GrabImage XL_MENU\IMG,WIN\X+GAD\X,WIN\Y+GAD\Y
					EndIf
				EndIf
			Case gad_TEXTINP,gad_TEXTAREA	
				
				Select GUI_CLICKEVENT
					
					Case ms_LMBHIT
						If GAD\INP\EDIT=True
							GAD\INP\INV_START=-1
							GAD\INP\INV_END=-1
							GAD\INP\BLOCK=False
							GAD\INP\MX=MouseX()
							GAD\INP\MY=MouseY()
							If RectsOverlap(MouseX(),MouseY(),1,1,GAD\WIN\X+GAD\X+GUI_BUFFERX(GAD),GAD\WIN\Y+GAD\Y+GUI_BUFFERY(GAD),GAD\W,GAD\H)
								GUI_INPUTGAD=GAD
								GUI_CUR_LOCATE(MouseX()-(GAD\WIN\X+GAD\X+GUI_BUFFERX(GAD)),MouseY()-(GAD\WIN\Y+GAD\Y+GUI_BUFFERY(GAD)))
								If GAD\INP\INPUTBNK<>Null
									GAD\INP\INV_START=GAD\INP\INPUTBNK\POS_START+GAD\INP\INPUTPOS
								Else
									GAD\INP\INV_START=0
								EndIf
							EndIf
						EndIf
						GUI_BLOCKGAD=Null
					Case ms_LMBHLD
						If GAD\INP\EDIT=True
							If RectsOverlap(MouseX(),MouseY(),1,1,GAD\WIN\X+GAD\X+GUI_BUFFERX(GAD),GAD\WIN\Y+GAD\Y+GUI_BUFFERY(GAD),GAD\W,GAD\H) Or GAD\INP\BLOCK=True
								If GAD\INP\INV_START=-1 Or GAD<>GUI_INPUTGAD
									GUI_CLICKEVENT=ms_NONE
								Else
									If MouseX()<>GAD\INP\MX Or MouseY()<>GAD\INP\MY Or GAD\INP\BLOCK=True
										GUI_WINMODE=Wmode_BLOCK
										GUI_BLOCKGAD=GAD
										GAD\INP\BLOCK=True
										If (MouseX()<>GAD\INP\MX Or MouseY()<>GAD\INP\MY) And GAD\INP\FLAG=False
										GAD\INP\MX=MouseX()
										GAD\INP\MY=MouseY()
										
										;If GAD\INP\INV_END=-1
											GUI_CUR_LOCATE(MouseX()-(GAD\WIN\X+GAD\X+GUI_BUFFERX(GAD)),MouseY()-(GAD\WIN\Y+GAD\Y+GUI_BUFFERY(GAD)))
											If GAD\INP\INPUTBNK<>Null
												GAD\INP\INV_END=GAD\INP\INPUTBNK\POS_START+GAD\INP\INPUTPOS
											Else
												GAD\INP\INV_END=0
											EndIf
										EndIf
									EndIf
								EndIf
							EndIf
						EndIf
					Case ms_LMBREL
						If GAD\ACTIVE=True
							GUI_WINMODE=Wmode_INPUT
							GUI_INPUTGAD=GAD
							GUI_CURX=-1:GUI_CURY=-1
						EndIf
				End Select		
			Case gad_TAB
				If GAD\ON=False
					GUI_GROUP_OFF(GAD\OBJ)
					GAD\ON=True
					GAD\WIN\TAB=GAD\PAD[0]
					GUI_REFRESH(GAD\WIN\OBJ)
					GUI_CLICKEVENT=ms_WAITRELEASE
					GUI_LMBDWN=False:GUI_RMBDWN=False
				EndIf
		End Select
		If GAD\ON<>XL_GADON
			EVENT\GAD_NEWSTATE=True
		EndIf
		If GAD\PARENT<>Null
			GUI_PROCESS_PARENT(GAD)
		EndIf
	EndIf
	SetBuffer BackBuffer():Viewport 0,0,GUI_GFXW,GUI_GFXH:Origin 0,0:GUI_OX=0:GUI_OY=0:GUI_VPX=0:GUI_VPY=0:GUI_VPW=GUI_GFXW:GUI_VPH=GUI_GFXH
	Viewport 0,0,GUI_GFXW,GUI_GFXH
End Function

Function GUI_PROCESS_INPUT(XL_FORCEKEY=-1,XL_FORCESHIFT=False,XL_SCROLL=True)
	GAD.GAD=GUI_INPUTGAD
	WIN.WIN=GAD\WIN
	EVENT\INPUTGAD=GAD\OBJ
	
	If GAD\INP\CUR_X=-1 Or GAD\INP\CUR_Y=-1
		GUI_CUR_LOCATE(MouseX()-(WIN\X+GAD\X+GUI_BUFFERX(GAD)),MouseY()-(WIN\Y+GAD\Y+GUI_BUFFERY(GAD)))
		GUI_CURTIMER=MilliSecs()
		FlushKeys
	Else
		GUI_SHIFT=False
		GUI_CTRL=False
		GUI_ALT=False
		
		GUI_KEYDOWN=-1
		If XL_FORCEKEY=-1
			For XL_T=1 To 237
				If KeyDown(XL_T)
					If XL_T=42 Or XL_T=54				;SHIFT
						GUI_SHIFT=True
					Else
						If XL_T=29 Or XL_T=157		;CTRL
							GUI_CTRL=True
						Else
							If XL_T=56
								GUI_ALT=True
							Else
								GUI_KEYDOWN=XL_T
							EndIf
						EndIf
					EndIf
				EndIf
			Next
		Else
			GUI_KEYDOWN=XL_FORCEKEY
			GUI_SHIFT=XL_FORCEKEY
		EndIf
		GUI_GETKEY=GetKey()
	
		If GUI_GETKEY=0
			If GUI_KEYDOWN>-1 And GUI_KEYDOWN=GUI_OLDKEYDOWN
				If GUI_REPEAT=True
					GUI_GETKEY=GUI_OLDKEY
				Else
					If MilliSecs()>GUI_REPTIMER+400
						GUI_REPEAT=True
					EndIf
				EndIf
			EndIf
		EndIf
		If GUI_KEYDOWN>-1 Or GUI_GETKEY>0
			GUI_PARSE_KEY()
			
			If (GUI_GETKEY>47 And GUI_GETKEY<58)
				XL_NUMBER=True
			EndIf
									
			If GUI_GETKEY>0 Or XL_FORCEKEY>-1
				If GUI_OLDKEY<>GUI_GETKEY Or GUI_GETKEY=13
					GUI_FLASH=True
					GUI_REPEAT=False
					GUI_REPTIMER=MilliSecs()
				EndIf
				GUI_OLDKEY=GUI_GETKEY
				GUI_OLDKEYDOWN=GUI_KEYDOWN
				
				XL_INP.TXTAREA=GUI_INPUTGAD\INP
				
				Select GUI_INPUTGAD\TYP
					Case gad_TEXTAREA,gad_TEXTINP
						Select GUI_KEYDOWN
							Case 203										;LEFT
								GUI_FLASH=False
								XL_INP\INPUTPOS=XL_INP\INPUTPOS-1
								XL_INP\MODE=inp_INSERT
								If XL_INP\INPUTPOS<1
									XL_INP\INPUTPOS=0
									If XL_INP\INPUTBNK\PAR<>Null And XL_SCROLL=True
										XL_INP\INPUTBNK=XL_INP\INPUTBNK\PAR
										XL_INP\INPUTPOS=Len(XL_INP\INPUTBNK\TXT$)
										XL_INP\MODE=inp_APPEND
									EndIf
								EndIf
								If GUI_SHIFT=True And GAD\INP\EDIT=True
									GUI_FLASH=True
									If GAD\INP\INV_START=-1
										GAD\INP\INPUTPOS=QLIMIT(GAD\INP\INPUTPOS-2,0,Len(GAD\INP\INPUTBNK\TXT$))
										GAD\INP\INV_START=GAD\INP\INPUTPOS+GAD\INP\INPUTBNK\POS_START
									Else
										If GAD\INP\INV_END=-1
											If GAD\INP\WRAP=False
												GAD\INP\INV_START=GAD\INP\INV_START-1
											EndIf
											If GAD\INP\INV_START<0 Then GAD\INP\INV_START=0
										EndIf
										GUI_WINMODE=Wmode_BLOCK
										GUI_BLOCKGAD=GAD
										GAD\INP\BLOCK=True
										GAD\INP\INV_END=XL_INP\INPUTPOS+XL_INP\INPUTBNK\POS_START
									EndIf
								EndIf
								GUI_TEXTOUTPUT(GAD)
							Case 205										;RITE
								GUI_FLASH=False
								XL_INP\INPUTPOS=XL_INP\INPUTPOS+1
								XL_INP\MODE=inp_INSERT
								If XL_INP\INPUTPOS>Len(XL_INP\INPUTBNK\TXT$)
									XL_INP\INPUTPOS=Len(XL_INP\INPUTBNK\TXT$)
									XL_INP\MODE=inp_APPEND
									If XL_INP\INPUTBNK\NXT<>Null And XL_SCROLL=True
										XL_INP\INPUTBNK=XL_INP\INPUTBNK\NXT
										XL_INP\INPUTPOS=0
										XL_INP\MODE=inp_INSERT
									EndIf
								EndIf
								If GUI_SHIFT=True And GAD\INP\EDIT=True
									GUI_FLASH=True
									If GAD\INP\INV_START=-1
										GAD\INP\INV_START=GAD\INP\INPUTPOS+GAD\INP\INPUTBNK\POS_START
									Else
										GUI_WINMODE=Wmode_BLOCK
										GUI_BLOCKGAD=GAD
										GAD\INP\BLOCK=True
										GAD\INP\INV_END=XL_INP\INPUTPOS+XL_INP\INPUTBNK\POS_START
									EndIf
								EndIf
								GUI_TEXTOUTPUT(GAD)
							Case 200										;UP
								GUI_FLASH=False
								If GUI_INPUTGAD\TYP=gad_TEXTAREA
									If XL_INP\WRAP=False
										If XL_INP\INPUTBNK\PAR<>Null
											GUI_CUR_LOCATE(XL_INP\CUR_X,XL_INP\CUR_Y-12)
										EndIf
									Else
										If GAD\LINK[0]\VAL+XL_INP\CUR_Y>1 
											GUI_CUR_LOCATE(XL_INP\CUR_X,XL_INP\CUR_Y-12)
										EndIf
									EndIf
								EndIf
								If GUI_SHIFT=True And GAD\INP\EDIT=True
									GUI_FLASH=True
									If GAD\INP\INV_START=-1
										GAD\INP\INV_START=GAD\INP\INPUTPOS+GAD\INP\INPUTBNK\POS_START
									Else
										GUI_WINMODE=Wmode_BLOCK
										GUI_BLOCKGAD=GAD
										GAD\INP\BLOCK=True
										GAD\INP\INV_END=XL_INP\INPUTPOS+XL_INP\INPUTBNK\POS_START
									EndIf
								EndIf
							Case 208										;DOWN
								GUI_FLASH=False
								If GUI_INPUTGAD\TYP=gad_TEXTAREA
									If XL_INP\WRAP=False
										If XL_INP\INPUTBNK\NXT<>Null
											GUI_CUR_LOCATE(XL_INP\CUR_X,XL_INP\CUR_Y+12)
										EndIf
									Else
										GUI_CUR_LOCATE(XL_INP\CUR_X,XL_INP\CUR_Y+12)
									EndIf
								EndIf
								If GUI_SHIFT=True And GAD\INP\EDIT=True
									GUI_FLASH=True
									If GAD\INP\INV_START=-1
										GAD\INP\INV_START=GAD\INP\INPUTPOS+GAD\INP\INPUTBNK\POS_START
									Else
										GUI_WINMODE=Wmode_BLOCK
										GUI_BLOCKGAD=GAD
										GAD\INP\BLOCK=True
										GAD\INP\INV_END=XL_INP\INPUTPOS+XL_INP\INPUTBNK\POS_START
									EndIf
								EndIf
							Case 199										;HOME
								GUI_FLASH=False
								If XL_INP\WRAP=False
									XL_INP\INPUTPOS=0
									XL_INP\MODE=inp_INSERT
									GUI_TEXTOUTPUT(GAD)				
								Else
									GUI_CUR_LOCATE(1,XL_INP\CUR_Y+2,True)
								EndIf
								If GUI_SHIFT=True And GAD\INP\EDIT=True
									GUI_FLASH=True
									If GAD\INP\INV_START=-1
										GAD\INP\INV_START=GAD\INP\INPUTPOS+GAD\INP\INPUTBNK\POS_START
									Else
										GUI_WINMODE=Wmode_BLOCK
										GUI_BLOCKGAD=GAD
										GAD\INP\BLOCK=True
										GAD\INP\INV_END=XL_INP\INPUTPOS+XL_INP\INPUTBNK\POS_START
									EndIf
								EndIf
							Case 207										;END
								GUI_FLASH=False
								If XL_INP\WRAP=False
									XL_INP\INPUTPOS=Len(XL_INP\INPUTBNK\TXT$)
									XL_INP\MODE=inp_APPEND
									GUI_TEXTOUTPUT(GAD)
								Else
									GUI_CUR_LOCATE(XL_INP\IMG_W-1,XL_INP\CUR_Y+2)
								EndIf
								If GUI_SHIFT=True And GAD\INP\EDIT=True
									GUI_FLASH=True
									If GAD\INP\INV_START=-1
										GAD\INP\INV_START=GAD\INP\INPUTPOS+GAD\INP\INPUTBNK\POS_START
									Else
										GUI_WINMODE=Wmode_BLOCK
										GUI_BLOCKGAD=GAD
										GAD\INP\BLOCK=True
										GAD\INP\INV_END=XL_INP\INPUTPOS+XL_INP\INPUTBNK\POS_START
									EndIf
								EndIf
							Default
								If XL_INP\BLOCK=True
									GUI_BLOCK_DELETE()
								EndIf
									XL_INP\INV_START=-1
									XL_INP\INV_END=-1
									EVENT\GAD_NEWTEXT=True
									EVENT\GAD=GAD\OBJ
									EVENT\INPUTGAD=GAD\OBJ
									GUI_FLASH=True
									If GUI_GETKEY=13 And GUI_INPUTGAD\TYP=gad_TEXTINP
										XL_INP\INPUTBNK\TXT$=XL_INP\INPUTBNK\TXT$+Chr$(13)
										XL_FINISH_EDIT=True
									Else
										GUI_TEXTINPUT()
									EndIf
								End Select
					Case gad_INTEGER
						GAD\PAD[1]=20
						Select GUI_KEYDOWN
							Case 203										;LEFT
								GUI_FLASH=False
								XL_INP\INPUTPOS=XL_INP\INPUTPOS-1
								If XL_INP\INPUTPOS<0 Then XL_INP\INPUTPOS=0
								XL_INP\MODE=inp_INSERT
								GUI_TEXTOUTPUT(GAD)
							Case 205										;RITE
								GUI_FLASH=False
								XL_INP\INPUTPOS=XL_INP\INPUTPOS+1
								XL_INP\MODE=inp_INSERT
								If XL_INP\INPUTPOS>Len(XL_INP\INPUTBNK\TXT$)
									XL_INP\INPUTPOS=Len(XL_INP\INPUTBNK\TXT$)
									XL_INP\MODE=inp_APPEND
								EndIf
								GUI_TEXTOUTPUT(GAD)
							Case 199										;HOME
								GUI_FLASH=False
								XL_INP\INPUTPOS=0
								XL_INP\MODE=inp_INSERT
								GUI_TEXTOUTPUT(GAD)				
							Case 207										;END
								GUI_FLASH=False
								XL_INP\INPUTPOS=Len(XL_INP\INPUTBNK\TXT$)
								XL_INP\MODE=inp_APPEND
								GUI_TEXTOUTPUT(GAD)
							Default
								If XL_INP\BLOCK=False
									XL_INP\INV_START=-1
									XL_INP\INV_END=-1
									EVENT\GAD_NEWTEXT=True
									EVENT\GAD=GAD\OBJ
									EVENT\INPUTGAD=GAD\OBJ
									GUI_FLASH=True
									If GUI_GETKEY=13
										XL_FINISH_EDIT=True
									Else
										XL_MAX1=Len(Abs(GAD\MIN))
										XL_MAX=Len(Abs(GAD\MAX))
										If XL_MAX1>XL_MAX
											XL_MAX=XL_MAX1
										EndIf
										If XL_NUMBER=True
											If Len(XL_INP\INPUTBNK\TXT$)<XL_MAX
												GUI_TEXTINPUT()
											EndIf
										Else
											If GUI_GETKEY=4 Or GUI_GETKEY=8
												GUI_TEXTINPUT()
											Else
												If Chr$(GUI_GETKEY)="-"
													If Instr(XL_INP\INPUTBNK\TXT$,"-")=0
														XL_INP\INPUTBNK\TXT$="-"+XL_INP\INPUTBNK\TXT$
														XL_INP\INPUTPOS=XL_INP\INPUTPOS+1
													Else
														XL_INP\INPUTBNK\TXT$=Mid$(XL_INP\INPUTBNK\TXT$,2)
														XL_INP\INPUTPOS=XL_INP\INPUTPOS-1
													EndIf
												EndIf
												GUI_TEXTOUTPUT(GAD)
											EndIf
										EndIf
									EndIf
								EndIf
						End Select
					Case gad_FLOAT
						GAD\PAD[1]=20
						Select GUI_KEYDOWN
							Case 203										;LEFT
								GUI_FLASH=False
								XL_INP\INPUTPOS=XL_INP\INPUTPOS-1
								XL_INP\MODE=inp_INSERT
								If XL_INP\INPUTPOS<1
									XL_INP\INPUTPOS=0
									If XL_INP\INPUTBNK\PAR<>Null
										XL_INP\INPUTBNK=XL_INP\INPUTBNK\PAR
										XL_INP\INPUTPOS=Len(XL_INP\INPUTBNK\TXT$)
										XL_INP\MODE=inp_APPEND
									EndIf
								EndIf
								GUI_TEXTOUTPUT(GAD)
							Case 205										;RITE
								GUI_FLASH=False
								XL_INP\INPUTPOS=XL_INP\INPUTPOS+1
								XL_INP\MODE=inp_INSERT
								If XL_INP\INPUTPOS>Len(XL_INP\INPUTBNK\TXT$)
									XL_INP\INPUTPOS=Len(XL_INP\INPUTBNK\TXT$)
									XL_INP\MODE=inp_APPEND
									If XL_INP\INPUTBNK\NXT<>Null
										XL_INP\INPUTBNK=XL_INP\INPUTBNK\NXT
										XL_INP\INPUTPOS=0
										XL_INP\MODE=inp_INSERT
									EndIf
								EndIf
								GUI_TEXTOUTPUT(GAD)
							Case 199										;HOME
								GUI_FLASH=False
								XL_INP\INPUTBNK=XL_INP\ALPHA
								XL_INP\INPUTPOS=0
								XL_INP\MODE=inp_INSERT
								GUI_TEXTOUTPUT(GAD)				
							Case 207										;END
								GUI_FLASH=False
								XL_INP\INPUTBNK=XL_INP\ZETA
								XL_INP\INPUTPOS=Len(XL_INP\INPUTBNK\TXT$)
								XL_INP\MODE=inp_APPEND
								GUI_TEXTOUTPUT(GAD)
							Default
								If XL_INP\BLOCK=False
									XL_INP\INV_START=-1
									XL_INP\INV_END=-1
									EVENT\GAD_NEWTEXT=True
									EVENT\GAD=GAD\OBJ
									EVENT\INPUTGAD=GAD\OBJ
									GUI_FLASH=True
									If GUI_GETKEY=13
										XL_FINISH_EDIT=True
									Else
										XL_MAX1=Len(Abs(GAD\FMIN))
										XL_MAX=Len(Abs(GAD\FMAX))
										If XL_MAX1>XL_MAX
											XL_MAX=XL_MAX1
										EndIf

										If XL_NUMBER=True
											If Len(XL_INP\INPUTBNK\TXT$)<XL_MAX
												GUI_TEXTINPUT()
											EndIf
										Else
											Select GUI_GETKEY
												Case Asc("-")
													If Instr(XL_INP\INPUTBNK\TXT$,"-")=0
														XL_INP\INPUTBNK\TXT$="-"+XL_INP\INPUTBNK\TXT$
														XL_INP\INPUTPOS=XL_INP\INPUTPOS+1
													Else
														XL_INP\INPUTBNK\TXT$=Mid$(XL_INP\INPUTBNK\TXT$,2)
														XL_INP\INPUTPOS=XL_INP\INPUTPOS-1
													EndIf
													GUI_TEXTOUTPUT(GAD)
												Case Asc(".")
													If Instr(XL_INP\INPUTBNK\TXT$,".")=0
														GUI_TEXTINPUT()
													EndIf
												Case 4,8
													GUI_TEXTINPUT()
											End Select
										EndIf
									EndIf
								EndIf
							End Select
					End Select
			EndIf
		Else
			If GUI_KEYDOWN=-1
				GUI_OLDKEYDOWN=-1
			EndIf
			GUI_REPEAT=False
			GUI_REPTIMER=MilliSecs()
			GUI_FLASH=True
		EndIf
		
		If MilliSecs()<GUI_CURTIMER+200 Or GUI_FLASH=False
			Select GAD\TYP
				 Case gad_TEXTAREA
					GUI_COL(~GAD\INP\CLS_COL)
					XL_CH=12
				Case gad_TEXTINP
					GUI_COL(~GAD\INP\CLS_COL)
					XL_CH=12
				Default
					GUI_COL($0)
					XL_CH=12
			End Select
			SetBuffer BackBuffer():Viewport 0,0,GUI_GFXW,GUI_GFXH:Origin 0,0
			GUI_GAD_BUFFER(GAD,GAD\WIN\X,GAD\WIN\Y)
			Origin 0,0
			Rect GAD\INP\CUR_X+GAD\X+WIN\X+GUI_BUFFERX(GAD)+1,GAD\INP\CUR_Y+1+GAD\Y+WIN\Y+GUI_BUFFERY(GAD),2,XL_CH
			Viewport 0,0,GUI_GFXW,GUI_GFXH
		Else
			If MilliSecs()>GUI_CURTIMER+400
				GUI_CURTIMER=MilliSecs()
			EndIf
		EndIf
		
	EndIf
	
	If GUI_CLICKEVENT=ms_LMBHIT Or GUI_CLICKEVENT=ms_RMBHIT Or XL_FINISH_EDIT=True
		GUI_WINMODE=Wmode_NONE
		GAD\INP\CUR_X=-1
		GAD\INP\CUR_Y=-1
		GUI_INPUTPOS=0
		EVENT\GAD_NEWTEXT=True
		EVENT\GAD_NEWVAL=True
		EVENT\GAD=GAD\OBJ
		EVENT\INPUTGAD=GAD\OBJ
		GUI_CLICKEVENT=ms_NONE
		Select GUI_INPUTGAD\TYP
			Case gad_TEXTINP
				GAD\CAP$=GAD\INP\TXT$
			Case gad_INTEGER
				XL_VAL=GAD\INP\ALPHA\TXT$
				XL_VAL=QLIMIT(XL_VAL,GAD\MIN,GAD\MAX)
				GAD\VAL=XL_VAL
				GAD\CAP$=GAD\VAL
				GAD\INP\ALPHA\TXT$=GAD\CAP$
				GUI_REFRESH_GAD(GAD\OBJ)
				GAD\PAD[1]=20
			Case gad_FLOAT
				XL_FVAL#=GAD\INP\ALPHA\TXT$
				XL_FVAL#=FLIMIT(XL_FVAL,GAD\FMIN,GAD\FMAX)
				GAD\FVAL=XL_FVAL
				GAD\CAP$=GUI_FLOAT_STR$(GAD\FVAL,GAD\PAD[0])
				GAD\INP\ALPHA\TXT$=GAD\CAP$
				GUI_REFRESH_GAD(GAD\OBJ)
				GAD\PAD[1]=20
			End Select
	EndIf
End Function

Function GUI_PROCESS_CURSOR()
	
	If GUI_BLOCKGAD=Null
		GUI_WINMODE=Wmode_NONE
		GUI_BLOCK=False
		Return
	Else
		If GUI_BLOCKGAD\INP\EDIT=False
			GUI_WINMODE=Wmode_NONE
			GUI_BLOCKGAD\INP\BLOCK=False
			GUI_BLOCKGAD\INP\INV_START=-1
			GUI_BLOCKGAD\INP\INV_END=-1
			GUI_BLOCKGAD=Null
			Return
		EndIf
	EndIf
	
	GAD.GAD=GUI_BLOCKGAD
	XL_AREA.TXTAREA=GAD\INP
	XL_AREA\FLAG=False
	
	If GUI_GADHIT=GAD
		If MouseX()<GUI_GAD_SCREENX(GAD\OBJ)
			GUI_GAD_SCROLL(GAD\OBJ,-2,0)
			XL_AREA\FLAG=True
			XL_SKIP=True
		EndIf
		If MouseX()>GUI_GAD_SCREENX(GAD\OBJ)+GAD\W
			GUI_GAD_SCROLL(GAD\OBJ,2,0)
			XL_AREA\FLAG=True
			XL_SKIP=True
		EndIf
		If MouseY()<GUI_GAD_SCREENY(GAD\OBJ)
			GUI_GAD_SCROLL(GAD\OBJ,0,-1)
			XL_AREA\FLAG=True
			XL_SKIP=True
		EndIf
		If MouseY()>GUI_GAD_SCREENY(GAD\OBJ)+GAD\H
			GUI_GAD_SCROLL(GAD\OBJ,0,1)
			XL_AREA\FLAG=True
			XL_SKIP=True
		EndIf
		
		If XL_SKIP=False	
			If MouseX()<>XL_AREA\MX Or MouseY()<>XL_AREA\MY
				XL_AREA\MX=MouseX()
				XL_AREA\MY=MouseY()
				
				XL_CX=QLIMIT(MouseX()-GUI_GAD_SCREENX(GAD\OBJ),0,GAD\W)
				XL_CY=QLIMIT(MouseY()-GUI_GAD_SCREENY(GAD\OBJ),0,GAD\H)
				
				GUI_CUR_LOCATE(XL_CX,XL_CY)
				
				If XL_AREA\INPUTBNK<>Null
					XL_TMP=XL_AREA\INPUTBNK\POS_START+XL_AREA\INPUTPOS
				Else
					XL_TMP=0
				EndIf
				XL_AREA\INV_END=XL_TMP
			EndIf
			GUI_TEXTOUTPUT(GAD)
		EndIf
	Else
		If XL_AREA\BLOCK=False
			GUI_WINMODE=Wmode_NONE
		Else
			GUI_PROCESS_INPUT()
			GUI_TEXTOUTPUT(GAD)
		EndIf
	EndIf
	
End Function




Function GUI_REFRESH_GAD(XL_GAD,XL_INV=False,XL_XP=0,XL_YP=0)
	GAD.GAD=Object.GAD(XL_GAD)
	If GAD\PARENT<>Null
		GAD\STATUS=GAD\PARENT\STATUS
		If GAD\PARENT\TYP<>gad_TEXTAREA
			GAD\ACTIVE=GAD\PARENT\ACTIVE
		EndIf
	EndIf
	If GAD\WIN\IMG>0 And (GAD\STATUS=gad_SHOW Or GAD\STATUS=gad_LOCK) And (GAD\TAB=0 Or GAD\TAB=GAD\WIN\TAB)
		SetBuffer ImageBuffer(GAD\WIN\IMG)
		WIN.WIN=GAD\WIN
		GUI_GAD_BUFFER(GAD)
		Select GAD\TYP
			Case gad_BUTTON
				GUI_DRAWBUTTON(GAD,False,0,0,GAD\BSTYLE)
			Case gad_SWITCH
				GUI_DRAWBUTTON(GAD,GAD\ON,0,0,GAD\BSTYLE)
			Case gad_CYCLE
				GUI_DRAWBUTTON(GAD,GAD\ON,0,0,gad_STYLE,16,0)
				GUI_COL(GAD\COL[2])
				Rect GAD\X+16,GAD\Y+1,1,GAD\H-2
				Color 0,0,0
				Rect GAD\X+17,GAD\Y+1,1,GAD\H-2
				GUI_COL(GAD\COL[1])
				Rect GAD\X+18,GAD\Y+1,1,GAD\H-2
				GUI_GFXBOX(GAD\X+6,GAD\Y+7,6,6,GAD\COL[0],GAD\COL[1],GAD\COL[2],True,False,True,GAD\COL[3],True,0)
			Case gad_IMGBUT,gad_IMGRAD
				If GAD\PAD[0]=True
					GUI_DRAWBUTTON(GAD,GAD\ON,0,0,GAD\BSTYLE)
				Else
					If GAD\ACTIVE=True
						DrawImage GAD\ICON\IMG[GAD\ON],GAD\X,GAD\Y
					Else
						DrawImage GAD\ICON\IMG[3],GAD\X,GAD\Y
					EndIf
				EndIf
			Case gad_TICK
				GUI_DRAWICON(icn_TICKBOX,GAD\X,GAD\Y,GAD\ON,GAD\ACTIVE)
				If GAD\ACTIVE=True
					GUI_FONTCOL(GAD\TXT_COL)
					GUI_TEXT(GAD\CAP$,GAD\X+16,GAD\Y+1,GAD\W,14)
				Else
					GUI_FONTCOL(GUI_RGB_SHADE(GAD\COL[0],-64))
					GUI_TEXT(GAD\CAP$,GAD\X+16,GAD\Y+1,GAD\W,14)
				EndIf
			Case gad_RADIO
				GUI_DRAWICON(icn_CHKBOX,GAD\X,GAD\Y,GAD\ON,GAD\ACTIVE)
				If GAD\ACTIVE=True
					GUI_FONTCOL(GAD\TXT_COL)
					GUI_TEXT(GAD\CAP$,GAD\X+16,GAD\Y+1,GAD\W,14)
				Else
					GUI_FONTCOL(GUI_RGB_SHADE(GAD\COL[0],-64))
					GUI_TEXT(GAD\CAP$,GAD\X+16,GAD\Y+1,GAD\W,14)
				EndIf
			Case gad_PROP
				;GUI_GFXBOX(GAD\X,GAD\Y,GAD\W,GAD\H,$FEFEFE,$FFFFFF,$CCCCCC,True,True)
				GUI_GFXBOX(GAD\X,GAD\Y,GAD\W,GAD\H,WIN\WCOL[0],GUI_RGB_SHADE(WIN\WCOL[0],8),WIN\WCOL[2],True,True,False,WIN\WCOL[3],True,-16)
				If GAD\PAD[1]=True
					XL_XPOS#=(GAD\FVAL-GAD\FMIN)*GAD\FPAD[0]
					XL_XPOS#=FLIMIT(XL_XPOS#,0,(GAD\PAD[0]-GAD\PAD[3]))
					DrawBlock GAD\IMG,GAD\X+XL_XPOS,GAD\Y
				Else
					XL_YPOS#=(GAD\FVAL-GAD\FMIN)
					XL_YPOS#=XL_YPOS*GAD\FPAD[0]
					XL_YPOS#=FLIMIT(XL_YPOS#,0,(GAD\PAD[0]-GAD\PAD[3]))
					DrawBlock GAD\IMG,GAD\X,GAD\Y+XL_YPOS
				EndIf
			Case gad_SLIDER
				If GAD\PAD[1]=True
			;		GUI_GFXBOX(GAD\X,GAD\Y,GAD\W,GAD\H,GAD\COL[3],GAD\COL[3],GAD\COL[3],True,True,True,GAD\COL[0],True,0)
					DrawBlock GAD\IMG,GAD\X,GAD\Y
					Color 0,0,0
					Rect GAD\X+1,GAD\Y+1,GAD\W-2,GAD\H-2,0
					XL_XPOS#=(GAD\FVAL-GAD\FMIN)*GAD\FPAD[0]
					XL_XPOS#=FLIMIT(XL_XPOS#-(GAD\PAD[3]/2),0,(GAD\PAD[0]-GAD\PAD[3]))
					DrawBlock icn_HSLIDER,GAD\X+XL_XPOS,GAD\Y
				Else
				;	GUI_GFXBOX(GAD\X,GAD\Y,GAD\W,GAD\H,GAD\COL[3],GAD\COL[3],GAD\COL[3],True,True,True,GAD\COL[0],True,0)
					DrawBlock GAD\IMG,GAD\X,GAD\Y
					Color 0,0,0
					Rect GAD\X+1,GAD\Y+1,GAD\W-2,GAD\H-2,0
					XL_YPOS#=(GAD\FVAL-GAD\FMIN)*GAD\FPAD[0]
					XL_YPOS#=FLIMIT(XL_YPOS#-(GAD\PAD[3]/2),0,(GAD\PAD[0]-GAD\PAD[3]))
					DrawBlock icn_VSLIDER,GAD\X,GAD\Y+XL_YPOS
				EndIf
				GAD\VAL=Int(GAD\FVAL)
			Case gad_INTEGER
				GUI_GFXBOX(GAD\X,GAD\Y,GAD\W,GAD\H,$FEFEFE,$FFFFFF,$CCCCCC,True,True)
				If GAD\ACTIVE=True
					GUI_FONTCOL(0)
				Else
					GUI_FONTCOL($D0D0D0)
				EndIf
				GUI_TEXT(GAD\VAL,GAD\X+3,GAD\Y+2,GAD\W-6,GAD\H-6,1,False)
				XL_VAL$=GAD\VAL
				GAD\CAP$=GAD\VAL
				GAD\INP\ALPHA\TXT$=GAD\CAP$
				GUI_TEXT(GAD\TXT$,GAD\X+GAD\W+13,GAD\Y+2,GUI_STRINGWIDTH(GAD\TXT$)+2,GAD\H-6,1,False)
			Case gad_FLOAT
				GUI_GFXBOX(GAD\X,GAD\Y,GAD\W,GAD\H,$FEFEFE,$FFFFFF,$CCCCCC,True,True)
				If GAD\ACTIVE=True
					GUI_FONTCOL(0)
				Else
					GUI_FONTCOL($D0D0D0)
				EndIf
				XL_VAL$=GUI_FLOAT_STR$(GAD\FVAL,GAD\PAD[0])
				GUI_TEXT(XL_VAL$,GAD\X+3,GAD\Y+2,GAD\W-6,GAD\H-6,0,False)
				GAD\CAP$=XL_VAL$
				GAD\INP\ALPHA\TXT$=GAD\CAP$
				GUI_TEXT(GAD\TXT$,GAD\X+GAD\W+13,GAD\Y+2,GUI_STRINGWIDTH(GAD\TXT$)+2,GAD\H-6,1,False)
			Case gad_TXTLIST
				GUI_GFXBOX(GAD\X,GAD\Y,GAD\W,GAD\H,$FEFEFE,$FFFFFF,$CCCCCC,True,True)
				GAD\PAD[1]=(GAD\LINK[0]\VAL)
				GAD\LINK[0]\FVAL=GAD\PAD[1]
				If GAD\LIST<>Null
				GUI_LIST_DRAW(GAD\LIST,GAD)
					SetBuffer ImageBuffer(WIN\IMG)
					GUI_GAD_BUFFER(GAD)
					DrawBlock GAD\LIST\IMG,GAD\X+2,GAD\Y+2
				EndIf
			Case gad_TREELIST
				GUI_GFXBOX(GAD\X,GAD\Y,GAD\W,GAD\H,$FEFEFE,$FFFFFF,$CCCCCC,True,True)
				GAD\PAD[1]=(GAD\LINK[0]\VAL)
				GAD\LINK[0]\FVAL=GAD\PAD[1]
				If GAD\LIST<>Null
					GUI_TREE_DRAW(GAD\LIST,GAD)
					SetBuffer ImageBuffer(WIN\IMG)
					GUI_GAD_BUFFER(GAD)
					DrawBlock GAD\LIST\IMG,GAD\X+2,GAD\Y+2
				EndIf
			Case gad_COMBO
				GUI_GFXBOX(GAD\X,GAD\Y,GAD\W,17,$FEFEFE,$FFFFFF,$CCCCCC,True,True)
				If GAD\ON=False
					GUI_GFXBOX(GAD\X+GAD\W-15,GAD\Y+2,13,13,GAD\COL[0],GAD\COL[1],GAD\COL[2],True,GAD\ON,True,GAD\COL[3],True,0)
				Else
					GUI_GFXBOX(GAD\X+GAD\W-15,GAD\Y+2,13,13,GAD\COL[3],GAD\COL[1],GAD\COL[2],True,GAD\ON,True,GAD\COL[0],True,-20)
				EndIf
				GUI_FONTCOL(GAD\TXT_COL)
				If GAD\ICON=Null
					GUI_TEXT(GAD\CAP$,GAD\X+2,GAD\Y+2,GAD\W-16,16,0)
				Else
					GUI_DRAWICON(GAD\ICON,GAD\X+2,(GAD\Y+9)-(GAD\ICON\H/2),0,GAD\ACTIVE)
					GUI_TEXT(GAD\CAP$,GAD\X+20,GAD\Y+2,GAD\W-(16+20),16,0)
				EndIf
				If GAD\PAD[0]=False
					DrawImage icn_DARROW\IMG[0],(GAD\X+GAD\W-15)+2,GAD\Y+4
				Else
					DrawImage icn_UARROW\IMG[0],(GAD\X+GAD\W-15)+2,GAD\Y+4
				EndIf
			Case gad_IMGBOX
				GUI_GFXBOX(GAD\X,GAD\Y+XL_YP,GAD\W,GAD\H,GAD\WIN\WCOL[0],GAD\WIN\WCOL[1],0,False,True,False,GAD\WIN\WCOL[3],True)
				If GAD\IMG
					DrawBlock GAD\IMG,GAD\X+GAD\PAD[0],GAD\Y+GAD\PAD[1]
				EndIf
				GUI_GFXBOX(GAD\X,GAD\Y+XL_YP,GAD\W,GAD\H,GAD\COL[0],GAD\COL[1],0,False,True,False,GAD\COL[3],False)
			Case gad_FRAME
				If GAD\CAP$<>""
					XL_YP=6
				EndIf
				If GAD\WIN\SKIN[GAD\WIN\TAB]<>Null Or GAD\WIN\SKIN[0]<>Null
					XL_FILL=False
				Else
					XL_FILL=True
				EndIf
				Select GAD\PAD[0]
					Case 1
						GUI_GFXBOX(GAD\X,GAD\Y+XL_YP,GAD\W,GAD\H,GAD\COL[0],GAD\COL[1],0,False,False,False,GAD\COL[3],False)
						GUI_GFXBOX(GAD\X+1,GAD\Y+XL_YP+1,GAD\W-2,GAD\H-2,GAD\COL[0],GAD\COL[1],0,False,True,False,GAD\COL[3],XL_FILL)
					Case 2
						GUI_GFXBOX(GAD\X,GAD\Y+XL_YP,GAD\W,GAD\H,GAD\COL[0],GAD\COL[1],0,False,True,False,GAD\COL[3],False)
						GUI_GFXBOX(GAD\X+1,GAD\Y+XL_YP+1,GAD\W-2,GAD\H-2,GAD\COL[0],GAD\COL[1],0,False,False,False,GAD\COL[3],XL_FILL)
					Case 3
						GUI_GFXBOX(GAD\X,GAD\Y+XL_YP,GAD\W,GAD\H,GAD\COL[0],GAD\COL[1],0,False,True,False,GAD\COL[3],XL_FILL,-10)
					Case 4
						GUI_GFXBOX(GAD\X,GAD\Y+XL_YP,GAD\W,GAD\H,GAD\COL[0],GAD\COL[1],GAD\COL[2],False,True,False,GAD\COL[3],False)
						GUI_GFXBOX(GAD\X+1,GAD\Y+XL_YP+1,GAD\W-2,GAD\H-2,GAD\COL[0],GAD\COL[1],GAD\COL[2],False,False,False,GAD\COL[3],XL_FILL)
					Default
						GUI_GFXBOX(GAD\X,GAD\Y+XL_YP,GAD\W,GAD\H,GAD\COL[0],GAD\COL[1],0,False,True,False,GAD\COL[3],XL_FILL)
				End Select
				If GAD\CAP$<>""
					GUI_GFXBOX(GAD\X+4,GAD\Y,GUI_STRINGWIDTH(GAD\CAP$)+8,16,GAD\COL[0],GAD\COL[0],GAD\COL[0],False,False,False,GAD\COL[3],XL_FILL)
					GUI_FONTCOL(GAD\TXT_COL)
					GUI_TEXT(GAD\CAP$,GAD\X+6,GAD\Y+1,GUI_STRINGWIDTH(GAD\CAP$)+4,16)
				EndIf
			Case gad_PANEL
			Case gad_TOOLBAR
			Case gad_MENUBUT
				If GAD\X+GAD\W<WIN\W-4
					If GAD\ACTIVE=True
						GUI_FONTCOL(GAD\TXT_COL)
						GUI_TEXT(GAD\CAP$,GAD\X+2,GAD\Y+2,GAD\W-2,16)
					Else
						GUI_FONTCOL(GUI_RGB_SHADE(GAD\COL[0],64))
						GUI_TEXT(GAD\CAP$,GAD\X+3,GAD\Y+3,GAD\W-2,16)
						GUI_FONTCOL(GUI_RGB_SHADE(GAD\COL[0],-64))
						GUI_TEXT(GAD\CAP$,GAD\X+2,GAD\Y+2,GAD\W-2,16)
					EndIf
				EndIf
			Case gad_TAB
				GUI_DRAWTAB(GAD)
			Case gad_LABEL
				If GAD\IMG
					DrawBlock GAD\IMG,GAD\X,GAD\Y
				Else
					GAD\IMG=CreateImage(GAD\W,GAD\H)
					GrabImage GAD\IMG,GAD\X,GAD\Y
				EndIf
				If GAD\ACTIVE=True
					GUI_FONTCOL(GAD\TXT_COL)
					GUI_TEXT(GAD\CAP$,GAD\X,GAD\Y,GAD\W,GAD\H,GAD\PAD[0],True)
				Else
					GUI_FONTCOL(GUI_RGB_SHADE(GAD\COL[0],-64))
					GUI_TEXT(GAD\CAP$,GAD\X,GAD\Y,GAD\W,GAD\H,GAD\PAD[0],True)
				EndIf
			Case gad_TEXTAREA
				GUI_TEXTOUTPUT(GAD)
				GUI_REFRESH_TEXT(GAD)
			Case gad_TEXTINP
				GUI_GFXBOX(GAD\X,GAD\Y,GAD\W,GAD\H,WIN\WCOL[0],WIN\WCOL[1],GUI_RGB_SHADE(WIN\WCOL[2],-32),False,True,False,0,True)
				If GAD\ACTIVE=True
					GUI_FONTCOL(0)
				Else
					GUI_FONTCOL($D0D0D0)
				EndIf
				GUI_TEXTOUTPUT(GAD)
				GUI_REFRESH_TEXT(GAD)
			Case gad_3D
				
			Case gad_IMGAREA
				GUI_GFXBOX(GAD\X,GAD\Y+XL_YP,GAD\W,GAD\H,GAD\WIN\WCOL[0],GAD\WIN\WCOL[1],0,False,True,False,GAD\WIN\WCOL[3],True)
				GAD\PAD[0]=GAD\LINK[1]\VAL
				GAD\PAD[1]=GAD\LINK[0]\VAL
				GUI_REFRESH_IMGAREA(GAD)
		End Select
		If GUI_GFXDEBUG=True
			Color 255,0,0
			Rect GAD\X,GAD\Y,GAD\W,GAD\H,0
		EndIf
	EndIf
	SetBuffer BackBuffer():Viewport 0,0,GUI_GFXW,GUI_GFXH:Origin 0,0:GUI_OX=0:GUI_OY=0:GUI_VPX=0:GUI_VPY=0:GUI_VPW=GUI_GFXW:GUI_VPH=GUI_GFXH
End Function